<wsdl:definitions xmlns="http://schemas.xmlsoap.org/wsdl/" xmlns:http="http://schemas.xmlsoap.org/wsdl/http/" xmlns:mime="http://schemas.xmlsoap.org/wsdl/mime/" xmlns:ns0="http://www.ebay.com/marketplace/services" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:soap12="http://schemas.xmlsoap.org/wsdl/soap12/" xmlns:tns="http://www.ebay.com/marketplace/services" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:xs="http://www.w3.org/2001/XMLSchema" name="BulkDataExchangeService" targetNamespace="http://www.ebay.com/marketplace/services">
    <wsdl:types>
        <xs:schema attributeFormDefault="unqualified" elementFormDefault="qualified" targetNamespace="http://www.ebay.com/marketplace/services">
            <xs:element name="createUploadJobRequest" nillable="true" type="tns:CreateUploadJobRequest"/>
            <xs:element name="createUploadJobResponse" nillable="true" type="tns:CreateUploadJobResponse"/>
            <xs:element name="startUploadJobRequest" nillable="true" type="tns:StartUploadJobRequest"/>
            <xs:element name="startUploadJobResponse" nillable="true" type="tns:StartUploadJobResponse"/>
            <xs:element name="abortJobRequest" nillable="true" type="tns:AbortJobRequest"/>
            <xs:element name="abortJobResponse" nillable="true" type="tns:AbortJobResponse"/>
            <xs:element name="getJobsRequest" nillable="true" type="tns:GetJobsRequest"/>
            <xs:element name="getJobsResponse" nillable="true" type="tns:GetJobsResponse"/>
            <xs:element name="getJobStatusRequest" nillable="true" type="tns:GetJobStatusRequest"/>
            <xs:element name="getJobStatusResponse" nillable="true" type="tns:GetJobStatusResponse"/>
            <xs:element name="startDownloadJobRequest" nillable="true" type="tns:StartDownloadJobRequest"/>
            <xs:element name="startDownloadJobResponse" nillable="true" type="tns:StartDownloadJobResponse"/>
            <xs:element name="createRecurringJobRequest" nillable="true" type="tns:CreateRecurringJobRequest"/>
            <xs:element name="createRecurringJobResponse" nillable="true" type="tns:CreateRecurringJobResponse"/>
            <xs:element name="deleteRecurringJobRequest" nillable="true" type="tns:DeleteRecurringJobRequest"/>
            <xs:element name="deleteRecurringJobResponse" nillable="true" type="tns:DeleteRecurringJobResponse"/>
            <xs:element name="getRecurringJobsRequest" nillable="true" type="tns:GetRecurringJobsRequest"/>
            <xs:element name="getRecurringJobsResponse" nillable="true" type="tns:GetRecurringJobsResponse"/>
            <xs:element name="getRecurringJobExecutionStatusRequest" nillable="true" type="tns:GetRecurringJobExecutionStatusRequest"/>
            <xs:element name="getRecurringJobExecutionStatusResponse" nillable="true" type="tns:GetRecurringJobExecutionStatusResponse"/>
            <xs:element name="getRecurringJobExecutionHistoryRequest" nillable="true" type="tns:GetRecurringJobExecutionHistoryRequest"/>
            <xs:element name="getRecurringJobExecutionHistoryResponse" nillable="true" type="tns:GetRecurringJobExecutionHistoryResponse"/>
            <xs:element name="activateRecurringJobRequest" nillable="true" type="tns:ActivateRecurringJobRequest"/>
            <xs:element name="activateRecurringJobResponse" nillable="true" type="tns:ActivateRecurringJobResponse"/>
            <xs:element name="suspendRecurringJobRequest" nillable="true" type="tns:SuspendRecurringJobRequest"/>
            <xs:element name="suspendRecurringJobResponse" nillable="true" type="tns:SuspendRecurringJobResponse"/>
            <xs:element name="abortRecurringJobExecutionRequest" nillable="true" type="tns:AbortRecurringJobExecutionRequest"/>
            <xs:element name="abortRecurringJobExecutionResponse" nillable="true" type="tns:AbortRecurringJobExecutionResponse"/>
            <xs:complexType name="CreateUploadJobRequest">
                <xs:annotation>
                    <xs:documentation>
                        Creates a Bulk Data Exchange Job and assigns it a job ID and a file reference ID. You need to add these IDs to all Bulk Data Exchange calls that are related to your job, such as getJobStatusRequest. You will also need to add this information to File Transfer API call requests for this job.
                    </xs:documentation>
                    <xs:appinfo>
                        <Summary>
                            Creates a Bulk Data Exchange Job and assigns it a job ID and a file reference ID.
                        </Summary>
                        <TempInfo>samples</TempInfo>
                    </xs:appinfo>
                </xs:annotation>
                <xs:complexContent>
                    <xs:extension base="tns:BaseServiceRequest">
                        <xs:sequence>
                            <xs:element name="uploadJobType" type="xs:token">
                                <xs:annotation>
                                    <xs:documentation>
                                        Specifies the Merchant Data API request used in a Bulk Data Exchange upload job. Each Bulk Data Exchange job can only have one <b>uploadjobType</b> (Merchant Data API request) per job. For instance, if you are uploading a data file, it can not have <b>AddFixedPriceItem</b> requests and <b>ReviseFixedPriceItem</b> requests within the same upload file. <br><br> For each of the request job types, Merchant Data requests with the same name are included within a data file and uploaded. For instance, if you create an <b>AddFixedPriceItem</b> job, then the file you are going to upload must contain <b>AddFixedPriceItem</b> requests - one request for each item, listing, or acknowledgement in your data file. <br><br> The following value definitions describe the request or response associated with each job type. <br><br> For more information about creating and uploading Merchant Data files, see the Large Merchant Services User Guide. <br><br> <dl> <lh><b>Applicable values:</b><br></lh> <dt><b>AddFixedPriceItem</b></dt> <dd>Defines a single new fixed-price item and lists it on a specified eBay site. </dd> <dt><b>AddItem</b></dt> <dd>Defines a single new item and lists it on a specified eBay site. </dd> <dt><b>EndFixedPriceItem</b></dt> <dd>Ends the specified item listing before the date and time at which it would normally end (per the listing duration). </dd> <dt><b>EndItem</b></dt> <dd>Ends the specified item listing before the date and time at which it would normally end (per the listing duration). </dd> <dt><b>OrderAck</b></dt> <dd>Request that acknowledges that an order has been received. Use the <b>OrderAck</b> request to acknowledge each line item in a <b>SoldReport</b> by order ID or line item ID. <br><br> After you send the first <b>OrderAck</b> call, future <b>SoldReport</b> calls will only contain unacknowledged orders or line items. </dd> <dt><b>RelistFixedPriceItem</b></dt> <dd>Enables a seller to take a single fixed-price item that ended without buyers and relist it on a specified eBay site. <br><br> An item may be relisted with the same item properties as the original listing, or the seller may change a number of the item's defining properties at relisting time. The new listing will have a different item ID than the original one. </dd> <dt><b>RelistItem</b></dt> <dd>Enables a seller to take a single item and relist it on a specified eBay site. </dd> <dt><b>ReviseFixedPriceItem</b></dt> <dd>Enables a seller to change the properties of a currently active fixed-price listing. <br><br> If the listing contains multiple quantities of an item, you can revise most of the fields in the listing (except item title, currency, product ID, photo display type, variation details, listing duration, listing format, or eBay Giving Works charity), even after one of the items in the listing has been purchased. To revise multiple listings, include a <b>ReviseFixedPriceItem</b> request once for each item or listing in your data file, with new information for each item or listing. </dd> <dt><b>ReviseInventoryStatus</b></dt> <dd>Enables a seller to change the price and quantity of a currently active fixed-price listing. Inputs are the item IDs or SKUs of the listings being revised, and price and quantity that are being changed for each revision. <br><br> You can use SKU as input only for fixed-price listings that are managed by SKU (i.e., <b>InventoryTrackingMethod</b> is set to SKU). <b>ItemID</b> can be used in either case. </dd> <dt><b>ReviseItem</b></dt> <dd>Enables a seller to change the properties of a currently active listing. </dd> <dt><b>SetShipmentTrackingInfo</b></dt> <dd>Includes information about a specific item and the shipping information associated with it. </dd> <dt><b>UploadSiteHostedPictures</b></dt> <dd>Uploads a picture to EPS (eBay Picture Services) when you supply a URL in the <b>ExternalPictureURL</b> field (the location of the picture on an external Web server). Unlike what the call name implies, you can only upload one picture per request. </dd> <dt><b>VerifyAddFixedPriceItem</b></dt> <dd>Acknowledges that the data for a single new fixed-price item matches the schema and can be added without data errors. </dd> <dt><b>VerifyAddItem</b></dt> <dd>Enables a seller to specify the definition of a new item and submit the definition to eBay without creating a listing. </dd> </dl>
                                    </xs:documentation>
                                    <xs:appinfo>
                                        <ListBasedOn/>
                                        <CallInfo>
                                            <CallName>createUploadJob</CallName>
                                            <RequiredInput>Yes</RequiredInput>
                                        </CallInfo>
                                    </xs:appinfo>
                                </xs:annotation>
                            </xs:element>
                            <xs:element name="UUID" type="xs:string">
                                <xs:annotation>
                                    <xs:documentation>
                                        A Universally Unique Identifier (UUID) provided by the seller's application.
                                    </xs:documentation>
                                    <xs:appinfo>
                                        <CallInfo>
                                            <CallName>createUploadJob</CallName>
                                            <RequiredInput>Yes</RequiredInput>
                                        </CallInfo>
                                    </xs:appinfo>
                                </xs:annotation>
                            </xs:element>
                            <xs:element minOccurs="0" name="fileType" type="tns:FileType">
                                <xs:annotation>
                                    <xs:documentation>
                                        Specifies the upload job type. Only XML is currently allowed.
                                    </xs:documentation>
                                    <xs:appinfo>
                                        <CallInfo>
                                            <CallName>createUploadJob</CallName>
                                            <RequiredInput>No</RequiredInput>
                                        </CallInfo>
                                    </xs:appinfo>
                                </xs:annotation>
                            </xs:element>
                        </xs:sequence>
                    </xs:extension>
                </xs:complexContent>
            </xs:complexType>
            <xs:complexType name="StartUploadJobRequest">
                <xs:annotation>
                    <xs:documentation>
                        Begins processing the data in the uploaded file. For example, if the data file contains data for the <b>AddFixedPriceItem</b> request, the Bulk Data Exchange API reads and sends this item data from the uploaded file to the eBay Trading API (and adds the fixed-price items to the eBay site).
                    </xs:documentation>
                    <xs:appinfo>
                        <Summary>Begins processing the data in the uploaded file.</Summary>
                        <TempInfo>samples</TempInfo>
                    </xs:appinfo>
                </xs:annotation>
                <xs:complexContent>
                    <xs:extension base="tns:BaseServiceRequest">
                        <xs:sequence>
                            <xs:element name="jobId" type="xs:string">
                                <xs:annotation>
                                    <xs:documentation>
                                        Unique ID assigned by the Bulk Data Exchange API for managing your upload job. Use the <b>jobId</b> value returned in the <b>createUploadJob</b> response. You can also use <b>getJobs</b> to retrieve job IDs for any upload jobs you have created. <br><br> Before you can start an upload job, you must upload the corresponding data file, using the File Transfer API. In the File Transfer API, <b>jobId</b> maps to <b>taskReferenceId</b> in the <b>uploadFile</b> call. <br><br> Once you start your upload job, use <b>getJobStatus</b> to monitor processing progress.
                                    </xs:documentation>
                                    <xs:appinfo>
                                        <CallInfo>
                                            <CallName>startUploadJob</CallName>
                                            <RequiredInput>Yes</RequiredInput>
                                        </CallInfo>
                                    </xs:appinfo>
                                </xs:annotation>
                            </xs:element>
                        </xs:sequence>
                    </xs:extension>
                </xs:complexContent>
            </xs:complexType>
            <xs:complexType name="AbortJobRequest">
                <xs:annotation>
                    <xs:documentation>
                        Stops (aborts) processing the uploaded file or processing the report file (to be downloaded). When your application makes this call, the processing will stop, but it may not stop immediately (much like when you abort a job from your printer queue).
                    </xs:documentation>
                    <xs:appinfo>
                        <Summary>Stops (aborts) processing the uploaded file.</Summary>
                        <TempInfo>samples</TempInfo>
                    </xs:appinfo>
                </xs:annotation>
                <xs:complexContent>
                    <xs:extension base="tns:BaseServiceRequest">
                        <xs:sequence>
                            <xs:element name="jobId" type="xs:string">
                                <xs:annotation>
                                    <xs:documentation>
                                        Unique ID assigned by the Bulk Data Exchange service for managing your upload or download job. Use the <b>jobId</b> value returned in the <b>createUploadJob</b> response or the <b>startDownloadJob</b> response. You can also use <b>getJobs</b> to retrieve job IDs for any of your upload or download jobs.
                                    </xs:documentation>
                                    <xs:appinfo>
                                        <CallInfo>
                                            <CallName>abortJob</CallName>
                                            <RequiredInput>Yes</RequiredInput>
                                        </CallInfo>
                                    </xs:appinfo>
                                </xs:annotation>
                            </xs:element>
                        </xs:sequence>
                    </xs:extension>
                </xs:complexContent>
            </xs:complexType>
            <xs:complexType name="GetJobsRequest">
                <xs:annotation>
                    <xs:documentation>
                        Lists all jobs that have been submitted with this Seller ID that have the job type specified in the request. You can enter a request with no job type field to see the status of all of your jobs, you can put a few job type fields in your request to see the status for specific job types, or you can put a single job type field in your request.
                    </xs:documentation>
                    <xs:appinfo>
                        <Summary>Lists Bulk Data Exchange jobs for this Seller ID.</Summary>
                        <TempInfo>samples</TempInfo>
                    </xs:appinfo>
                </xs:annotation>
                <xs:complexContent>
                    <xs:extension base="tns:BaseServiceRequest">
                        <xs:sequence>
                            <xs:element minOccurs="0" name="creationTimeFrom" type="xs:dateTime">
                                <xs:annotation>
                                    <xs:documentation>
                                        Use this field to designate the start of a date/time range. By default, 30 days worth of data is returned.
                                    </xs:documentation>
                                    <xs:appinfo>
                                        <CallInfo>
                                            <CallName>getJobs</CallName>
                                            <RequiredInput>No</RequiredInput>
                                        </CallInfo>
                                    </xs:appinfo>
                                </xs:annotation>
                            </xs:element>
                            <xs:element minOccurs="0" name="creationTimeTo" type="xs:dateTime">
                                <xs:annotation>
                                    <xs:documentation>
                                        Use this field to designate the end of a date/time range. Defaults to current time.
                                    </xs:documentation>
                                    <xs:appinfo>
                                        <CallInfo>
                                            <CallName>getJobs</CallName>
                                            <RequiredInput>No</RequiredInput>
                                        </CallInfo>
                                    </xs:appinfo>
                                </xs:annotation>
                            </xs:element>
                            <xs:element maxOccurs="unbounded" minOccurs="0" name="jobType" type="xs:token">
                                <xs:annotation>
                                    <xs:documentation>
                                        Job filter criteria. Default is return all job types. <br><br> Each of the Bulk Data Exchange job types corresponds to a Merchant Data request or response with the same name. The requests or responses are included within a data file that will be uploaded or downloaded after the job is created. For instance, if you create an <b> AddFixedPriceItem</b> job, then the file you are going to upload must contain <b>AddFixedPriceItem</b> requests - one request for each item in your data file. <br><br> A Bulk Data Exchange job can be associated with just one job type and the contents of the data file and the job type must match completely. For example, if you are uploading a data file it can not have both <b>AddFixedPriceItem</b> requests and <b>ReviseFixedPriceItem</b> requests within the same data file. <br><br> The following value definitions describe the request or response associated with each job type. <br><br> For more information about creating and uploading data files, see the Large Merchant Services User Guide. <br><br> <dl> <dt><strong>Applicable values:</strong></dt> <dt><strong>ActiveInventoryReport</strong></dt> <dd> Download job for a report that contains all of the active listings for a specific seller ID. The eBay servers read the credential information passed in by the seller's application to determine which seller's data to retrieve. </dd> <dt><strong>AddFixedPriceItem</strong></dt> <dd> Upload job for requests to add fixed-price items and lists it on a specified eBay site. </dd> <dt><strong>AddItem</strong></dt> <dd> Upload job for requests to Defines a single new item and lists it on a specified eBay site. </dd> <dt><strong>EndFixedPriceItem</strong></dt> <dd> Upload job for requests to end specified fixed-price item listings before the date and time at which they would normally end (per the listing duration). </dd> <dt><strong>EndItem</strong></dt> <dd> Upload job for requests to end specified item listings before the date and time at which they would normally end (per the listing duration). </dd> <dt><strong>FeeSettlementReport</strong></dt> <dd> Download job for a report that contains all of the fees the seller has incurred as invoices are generated by the eBay servers. This report gives large merchants the ability to look at their fees for many listings in one file. </dd> <dt><strong>OrderAck</strong></dt> <dd> Upload job for requests that acknowledge orders have been received. Use the <b>OrderAck</b> request to acknowledge each line item in a <b>SoldReport</b> by order ID or line item ID. <br><br> After you send the first <b>OrderAck</b> call, future <b>SoldReports</b> will only contain unacknowledged orders or line items. </dd> <dt><strong>RelistFixedPriceItem</strong></dt> <dd> Upload job for requests to re-list fixed-price (single or multi-item) listings that ended without buyers. A listing may be re-listed with the same item properties as the original or the seller may change a number of the item's defining properties at re- listing time. The new listing will have a different item ID than the original one. </dd> <dt><strong>RelistItem</strong></dt> <dd> Upload job for requests to re-list listings that ended without winning bidders or buyers. Enables a seller to take a single item (or a single multi-item listing) and re-list it on a specified eBay site. </dd> <dt><strong>ReviseFixedPriceItem</strong></dt> <dd> Upload job for requests to change the properties of a currently active listing. <br><br> If the listing contains multiple items, you can revise most of the fields in the listing (except Title, currency, product ID, photo display type, variation details, duration, format, or eBay Giving Works charity), even after one of the items in the listing has been purchased. To revise multiple listings, include a ReviseFixedPriceItemRequest once for each item or listing in your data file, with new information for each item or listing. </dd> <dt><strong>ReviseInventoryStatus</strong></dt> <dd> Upload job for requests to change the price and quantity of a currently active fixed-price listing. Inputs are the item IDs or SKUs of the listings being revised, and price and quantity that are being changed for each revision. <br><br> You can use SKU as input only for fixed-price listings that are managed by SKU (i.e., <b>InventoryTrackingMethod</b> is set to SKU). <b>ItemID</b> can be used in either case. </dd> <dt><strong>ReviseItem</strong></dt> <dd> Upload job for requests to change the properties of active listings. </dd> <dt><strong>SetShipmentTrackingInfo</strong></dt> <dd> Upload job for requests to specify the shipment tracking information associated with one package of an order. </dd> <dt><strong>SoldReport</strong></dt> <dd> Download job for a report that lists all items that have been sold by this seller (sold items that were submitted to the Large Merchant Service by the seller's application). <br><br> When an item is sold, the eBay application creates an 'order' for the seller. If only one item is sold, there is one order ID and one line item ID associated with the sale. However, if multiple items are sold as part of the same transaction, there is one order ID for the sale, and multiple line item IDs - one line item ID for each item sold. <br><br> Therefore, the Sold Report returns the order IDs and line item IDs for every order associated with the seller who is making the request. Sellers use this information to make inventory updates and start order fulfillment. <br><br> When orders have been fulfilled, the seller will probably want to remove them from the list of all orders that comes back every time they receive a SoldReport. To do this, they can acknowledge each order that has been fulfulled (using order ID or line item ID) by uploading a list of the fulfulled order information using an <b class="con">OrderAck</b> request. <br><br> After you upload a data file with an <b class="con">OrderAck</b> request, the orders (or line items within an order) will no longer appear in the <b> SoldReport</b>. (After you send the first <b> OrderAck</b> call, future <b class="con">SoldReports</b> that you request will only contain unacknowledged orders and line items.) </dd> <dt><strong>UploadSiteHostedPictures</strong></dt> <dd> Upload job for requests to upload pictures to EPS (eBay Picture Services). Each request contains a URL in the <b> ExternalPictureURL</b> field (the location of the picture on an external web server). Unlike what the call name implies, you can only upload one picture per request. </dd> <dt><strong>VerifyAddFixedPriceItem</strong></dt> <dd> Upload job for requests to test the definition of new fixed-price items by submitting them to eBay without creating a listing. </dd> <dt><strong>VerifyAddItem</strong></dt> <dd> Upload job for requests to test the definition of new items and submit the definition to eBay without creating a listing. </dd> </dl>
                                    </xs:documentation>
                                    <xs:appinfo>
                                        <ListBasedOn/>
                                        <CallInfo>
                                            <CallName>getJobs</CallName>
                                            <RequiredInput>No</RequiredInput>
                                        </CallInfo>
                                    </xs:appinfo>
                                </xs:annotation>
                            </xs:element>
                            <xs:element maxOccurs="unbounded" minOccurs="0" name="jobStatus" type="tns:JobStatus">
                                <xs:annotation>
                                    <xs:documentation>The current state of a Bulk Data Exchange job.</xs:documentation>
                                    <xs:appinfo>
                                        <CallInfo>
                                            <CallName>getJobs</CallName>
                                            <RequiredInput>No</RequiredInput>
                                        </CallInfo>
                                    </xs:appinfo>
                                </xs:annotation>
                            </xs:element>
                        </xs:sequence>
                    </xs:extension>
                </xs:complexContent>
            </xs:complexType>
            <xs:complexType name="GetJobStatusRequest">
                <xs:annotation>
                    <xs:documentation>Get job status for the provided job ID.</xs:documentation>
                    <xs:appinfo>
                        <Summary>Get job status for the provided job ID..</Summary>
                        <TempInfo>samples</TempInfo>
                    </xs:appinfo>
                </xs:annotation>
                <xs:complexContent>
                    <xs:extension base="tns:BaseServiceRequest">
                        <xs:sequence>
                            <xs:element name="jobId" type="xs:string">
                                <xs:annotation>
                                    <xs:documentation>
                                        Unique ID assigned by the Bulk Data Exchange service for managing your upload or download job. Use the <b>jobId</b> value returned in the <b>createUploadJob</b> response or the <b>startDownloadJob</b> response. You can also use <b>getJobs</b> to retrieve job IDs for any of your upload or download jobs.
                                    </xs:documentation>
                                    <xs:appinfo>
                                        <CallInfo>
                                            <CallName>getJobStatus</CallName>
                                            <RequiredInput>Yes</RequiredInput>
                                        </CallInfo>
                                    </xs:appinfo>
                                </xs:annotation>
                            </xs:element>
                        </xs:sequence>
                    </xs:extension>
                </xs:complexContent>
            </xs:complexType>
            <xs:complexType name="StartDownloadJobRequest">
                <xs:annotation>
                    <xs:documentation>
                        Begins processing the data for a report file to download. You must use the <b>getJobStatus</b> or <b>getRecurringJobExecutionStatus</b> calls to determine when the report data is available for download.
                    </xs:documentation>
                    <xs:appinfo>
                        <Summary>
                            Begins processing the data for a report file the you will download.
                        </Summary>
                        <TempInfo>samples</TempInfo>
                    </xs:appinfo>
                </xs:annotation>
                <xs:complexContent>
                    <xs:extension base="tns:BaseServiceRequest">
                        <xs:sequence>
                            <xs:element name="downloadJobType" type="xs:token">
                                <xs:annotation>
                                    <xs:documentation>
                                        This field is used to specify the Merchant Data report type to download when File Transfer API's <b>downloadFile</b> call is invoked. Each Bulk Data Exchange job can only have one job type per job. <br><br> <dl> <dt><strong>Applicable values:</strong></dt> <dt><b>ActiveInventoryReport</b></dt> <dd>A report that contains all of the active listings for a specific seller ID. The eBay servers read the credential information passed in by the seller's application to determine which seller's data to retrieve. For more information on <b>ActiveInventoryReport</b>, see the <a href="../../merchant-data/CallRef/ActiveInventoryReport.html" target="_blank">ActiveInventoryReport</a> call reference. <br><br> If this job type is specified, the user can customize the output of the <b>ActiveInventoryReport</b> by including and setting values for the <b>activeInventoryReportFilter</b> container. </dd> <dt><b>FeeSettlementReport</b></dt> <dd>A report that contains all of the fees that a seller has incurred as invoices are generated by the eBay servers. This report gives large merchants the ability to look at their fees for many listings in one file. For more information on <b>FeeSettlementReport</b>, see the <a href="../../merchant-data/CallRef/FeeSettlementReport.html" target="_blank">FeeSettlementReport</a> call reference. <br><br> If this job type is specified, the user must include the <b>feeSettlementReportFilter</b> container and set the <b>startTime</b> value for the <b>FeeSettlementReport</b>. </dd> <dt><b>SoldReport</b></dt> <dd>A report that contains all items that have been sold by the seller (sold items that were submitted to the Large Merchant Service by the seller's application). For more information on <b>SoldReport</b>, see the <a href="../../merchant-data/CallRef/SoldReport.html" target="_blank">SoldReport</a> call reference. <br><br> When an item is sold, the eBay application creates an 'order' for the seller. If only one item is sold, there is one order ID and one line item ID associated with the sale. However, if multiple items are sold as part of the same transaction, there is one order ID for the sale, and multiple line item IDs - one line item ID for each item sold. <br><br> Therefore, <b>SoldReport</b> returns the order IDs and line item IDs for every order associated with the seller who is making the request. Sellers use this information to make inventory updates and start order fulfillment. <br><br> To remove fulfilled orders from the <b>SoldReport</b> response, the seller can acknowledge these orders by uploading a list of <b>OrderID</b> and/or <b>OrderLineItemID</b> values in an <b>OrderAck</b> request. <br><br> After you upload a data file with an <b>OrderAck</b> request, the orders (or line items within an order) will no longer appear in <b>SoldReport</b>. After you send the first <b>OrderAck</b> call, future <b>SoldReport</b> responses will only contain unacknowledged orders and line items. <br><br> If this job type is specified, the user can control if/when shipping address fields are returned in the <b>SoldReport</b> by including and setting a value for the <b>soldReportFilter.includeShippingAddress</b> field. <dt><b>OrderReport</b></dt> <dd>If this report is specified, the response of the <b>downloadFile</b> call will be very similar to the data returned under the <b>OrderArray</b> container in the Trading API's <b>GetOrders</b> call. Other fields in the <b>GetOrders</b> response, including pagination results, <b>HasMoreOrders</b>, <b>OrdersPerPage</b>, <b>ReturnedOrderCountActual</b>, <b>ack</b>, <b>Build</b>, <b>CorrelationID</b>, and <b>Timestamp</b>, will not be returned in the <b>OrderReport</b>. <br><br> To remove fulfilled orders from the <b>OrderReport</b> response, the seller can acknowledge these orders by uploading a list of <b>OrderID</b> and/or <b>OrderLineItemID</b> values in an <b>OrderAck</b> request. <br><br> For more information on the <b>GetOrders</b> response, see the <a href="../../XML/docs/Reference/eBay/GetOrders.html#Response" target="_blank">GetOrders</a> call reference. <br><br> If this job type is specified, the user must include the <b>orderReportFilter</b> container and set its values. The values set in this container will control what appears in the <b>OrderReport</b> response. </dd> </dl>
                                    </xs:documentation>
                                    <xs:appinfo>
                                        <ListBasedOn/>
                                        <CallInfo>
                                            <CallName>startDownloadJob</CallName>
                                            <RequiredInput>Yes</RequiredInput>
                                        </CallInfo>
                                    </xs:appinfo>
                                </xs:annotation>
                            </xs:element>
                            <xs:element name="UUID" type="xs:string">
                                <xs:annotation>
                                    <xs:documentation>
                                        A Universally Unique Identifier (UUID) provided by the seller's application.
                                    </xs:documentation>
                                    <xs:appinfo>
                                        <CallInfo>
                                            <CallName>startDownloadJob</CallName>
                                            <RequiredInput>Yes</RequiredInput>
                                        </CallInfo>
                                    </xs:appinfo>
                                </xs:annotation>
                            </xs:element>
                            <xs:element minOccurs="0" name="downloadRequestFilter" type="tns:DownloadRequestFilter">
                                <xs:annotation>
                                    <xs:documentation>
                                        This is parent container of any and all filters used in the request. The filters used within the <b>downloadRequestFilter</b> container will partially be dependent on the <b>downloadJobType</b> that is being performed.
                                    </xs:documentation>
                                    <xs:appinfo>
                                        <CallInfo>
                                            <CallName>startDownloadJob</CallName>
                                            <RequiredInput>No</RequiredInput>
                                        </CallInfo>
                                    </xs:appinfo>
                                </xs:annotation>
                            </xs:element>
                            <xs:element minOccurs="0" name="sgfAppRecurringGUID" type="xs:long">
                                <xs:annotation>
                                    <xs:documentation>
                                        Global Uniquie Identifer in the Application recurring job properties table for example dbx_recurring_info_id in BDX_RECURRING_INFO_XX table.
                                    </xs:documentation>
                                    <xs:appinfo>
                                        <NoCalls/>
                                    </xs:appinfo>
                                </xs:annotation>
                            </xs:element>
                            <!--  Private Tag  -->
                            <xs:element minOccurs="0" name="recurringJob" type="xs:boolean">
                                <xs:annotation>
                                    <xs:documentation>
                                        It is an internal tag used to specify whether the download job is started as part of the recurring job request or not.
                                    </xs:documentation>
                                    <xs:appinfo>
                                        <NoCalls/>
                                    </xs:appinfo>
                                </xs:annotation>
                            </xs:element>
                        </xs:sequence>
                    </xs:extension>
                </xs:complexContent>
            </xs:complexType>
            <xs:complexType name="DownloadRequestFilter">
                <xs:annotation>
                    <xs:documentation>
                        Type defining the <b>downloadRequestFilter</b> container, which is parent container of any and all filters used in the <b>startDownloadJob</b> request.
                    </xs:documentation>
                </xs:annotation>
                <xs:sequence>
                    <xs:element minOccurs="0" name="feeSettlementReportFilter" type="tns:FeeSettlementReportFilter">
                        <xs:annotation>
                            <xs:documentation>
                                If the <b>startDownloadJob</b> request is using 'FeeSettlementReport' as the <b>downloadJobType</b>, the <b>feeSettlementReportFilter</b> container allows the user to set a <b>startTime</b> value, and only fee data on invoices sent to the seller after this date-time are returned in a <b>FeeSettlementReport</b> response. <br/><br/> This container is only applicable if the <b>downloadJobType</b> value is set to 'FeeSettlementReport'.
                            </xs:documentation>
                            <xs:appinfo>
                                <CallInfo>
                                    <CallName>startDownloadJob</CallName>
                                    <RequiredInput>No</RequiredInput>
                                </CallInfo>
                            </xs:appinfo>
                        </xs:annotation>
                    </xs:element>
                    <xs:element minOccurs="0" name="getItemInfoReportFilter" type="tns:GetItemInfoReportFilter">
                        <xs:annotation>
                            <xs:documentation>Reserved for future use.</xs:documentation>
                            <xs:appinfo>
                                <CallInfo>
                                    <NoCalls/>
                                </CallInfo>
                            </xs:appinfo>
                        </xs:annotation>
                    </xs:element>
                    <xs:element minOccurs="0" name="siteFilter" type="tns:SiteFilter">
                        <xs:annotation>
                            <xs:documentation>Reserved for internal or future use.</xs:documentation>
                            <xs:appinfo>
                                <CallInfo>
                                    <CallName>startDownloadJob</CallName>
                                    <RequiredInput>No</RequiredInput>
                                </CallInfo>
                            </xs:appinfo>
                        </xs:annotation>
                    </xs:element>
                    <xs:element minOccurs="0" name="activeInventoryReportFilter" type="tns:ActiveInventoryReportFilter">
                        <xs:annotation>
                            <xs:documentation>
                                If the <b>startDownloadJob</b> request is using 'ActiveInventoryReport' as the <b>downloadJobType</b>, the <b>activeInventoryReportFilter</b> container allows the user to control which containers/fields are returned in an <b>ActiveInventoryReport</b> response. <br/><br/> This container is only applicable if the <b>downloadJobType</b> value is set to 'ActiveInventoryReport'.
                            </xs:documentation>
                            <xs:appinfo>
                                <CallInfo>
                                    <CallName>startDownloadJob</CallName>
                                    <RequiredInput>No</RequiredInput>
                                </CallInfo>
                            </xs:appinfo>
                        </xs:annotation>
                    </xs:element>
                    <xs:element minOccurs="0" name="dateFilter" type="tns:DateFilter">
                        <xs:annotation>
                            <xs:documentation>Reserved for internal or future use.</xs:documentation>
                            <xs:appinfo>
                                <CallInfo>
                                    <CallName>startDownloadJob</CallName>
                                    <RequiredInput>No</RequiredInput>
                                </CallInfo>
                            </xs:appinfo>
                        </xs:annotation>
                    </xs:element>
                    <xs:element minOccurs="0" name="soldReportFilter" type="tns:SoldReportFilter">
                        <xs:annotation>
                            <xs:documentation>
                                If the <b>downloadJobType</b> value is set to 'SoldReport', the <b>soldReportFilter</b> container allows the user to control whether (and when) the buyers' shipping addresses are returned in an <b>SoldReport</b> response. <br/><br/> This container is applicable only if the <b>downloadJobType</b> value is set to 'SoldReport'.
                            </xs:documentation>
                            <xs:appinfo>
                                <CallInfo>
                                    <CallName>startDownloadJob</CallName>
                                    <RequiredInput>No</RequiredInput>
                                </CallInfo>
                            </xs:appinfo>
                        </xs:annotation>
                    </xs:element>
                    <xs:element minOccurs="0" name="orderReportFilter" type="tns:OrderReportFilter">
                        <xs:annotation>
                            <xs:documentation>
                                If the <b>downloadJobType</b> value is set to 'OrderReport', the <b>orderReportFilter</b> container is required and allows the user to set time, order status, or order type (eBay.com or Half.com) filters, and to specify whether or not to include Final Value Fees for each order line item in the report. <br/><br/> This container is applicable only if the <b>downloadJobType</b> value is set to 'OrderReport'.
                            </xs:documentation>
                            <xs:appinfo>
                                <CallInfo>
                                    <CallName>startDownloadJob</CallName>
                                    <RequiredInput>Conditionally</RequiredInput>
                                </CallInfo>
                            </xs:appinfo>
                        </xs:annotation>
                    </xs:element>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="DateFilter">
                <xs:annotation>
                    <xs:documentation>Reserved for internal or future use.</xs:documentation>
                </xs:annotation>
                <xs:sequence>
                    <xs:element minOccurs="0" name="startTime" type="xs:dateTime">
                        <xs:annotation>
                            <xs:documentation>Reserved for internal or future use.</xs:documentation>
                            <xs:appinfo>
                                <CallInfo>
                                    <CallName>startDownloadJob</CallName>
                                    <RequiredInput>Yes</RequiredInput>
                                </CallInfo>
                            </xs:appinfo>
                        </xs:annotation>
                    </xs:element>
                    <xs:element minOccurs="0" name="endTime" type="xs:dateTime">
                        <xs:annotation>
                            <xs:documentation>Reserved for internal or future use.</xs:documentation>
                            <xs:appinfo>
                                <CallInfo>
                                    <CallName>startDownloadJob</CallName>
                                    <RequiredInput>No</RequiredInput>
                                </CallInfo>
                            </xs:appinfo>
                        </xs:annotation>
                    </xs:element>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="SiteFilter">
                <xs:annotation>
                    <xs:documentation>Reserved for internal or future use.</xs:documentation>
                </xs:annotation>
                <xs:sequence>
                    <xs:element maxOccurs="unbounded" minOccurs="1" name="globalId" type="xs:token">
                        <xs:annotation>
                            <xs:documentation>Reserved for internal or future use.</xs:documentation>
                            <xs:appinfo>
                                <ListBasedOn/>
                                <CallInfo>
                                    <CallName>startDownloadJob</CallName>
                                    <RequiredInput>Yes</RequiredInput>
                                </CallInfo>
                            </xs:appinfo>
                        </xs:annotation>
                    </xs:element>
                    <xs:any maxOccurs="unbounded" minOccurs="0" processContents="lax"/>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="FeeSettlementReportFilter">
                <xs:annotation>
                    <xs:documentation>
                        Type defining the <b>feeSettlementReportFilter</b> container, which is used to control the date range on the fee data that is returned in a <b>FeeSettlementReport</b> response.
                    </xs:documentation>
                </xs:annotation>
                <xs:sequence>
                    <xs:element name="startTime" type="xs:dateTime">
                        <xs:annotation>
                            <xs:documentation>
                                The date-time specified in this field will control which fee data is returned in a <b>FeeSettlementReport</b> response. Only fee data on eBay invoices sent to the seller after this specified date-time are returned in the <b>FeeSettlementReport</b> response. <br><br> This field is required if the <b>feeSettlementReportFilter</b> container is used in the call request.
                            </xs:documentation>
                            <xs:appinfo>
                                <SeeLink>
                                    <URL>
                                        https://ebay.custhelp.com/app/answers/detail/a_id/1606
                                    </URL>
                                    <Title>
                                        Knowlegde Base article, "When is the FeeSettlementReport (FSR) available for download?"
                                    </Title>
                                </SeeLink>
                                <CallInfo>
                                    <CallName>startDownloadJob</CallName>
                                    <RequiredInput>Conditionally</RequiredInput>
                                </CallInfo>
                            </xs:appinfo>
                        </xs:annotation>
                    </xs:element>
                    <xs:any maxOccurs="unbounded" minOccurs="0" processContents="lax"/>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="ActiveInventoryReportFilter">
                <xs:annotation>
                    <xs:documentation>
                        Type defining the <b>activeInventoryReportFilter</b> container, which allows the user to control which containers/fields are returned in an <b>ActiveInventoryReport</b> response.
                    </xs:documentation>
                </xs:annotation>
                <xs:sequence>
                    <xs:element minOccurs="0" name="includeListingType" type="tns:IncludeListingType">
                        <xs:annotation>
                            <xs:documentation>
                                This field allows the user to control whether fixed-price and/or auction listings are returned in an <b>ActiveInventoryReport</b> response. If the <b>downloadJobType</b> value is set to 'ActiveInventoryReport', this value defaults to 'AuctionAndFixedPrice' and both listing types are returned in the <b>ActiveInventoryReport</b> response. However, there may be times when the user only wants to retrieve fixed-price listings or only auction listings, in which case the user would include and set the <b>includeListingType</b> field to 'FixedPrice' or 'Auction' as appropriate.
                            </xs:documentation>
                            <xs:appinfo>
                                <CallInfo>
                                    <CallName>startDownloadJob</CallName>
                                    <RequiredInput>No</RequiredInput>
                                </CallInfo>
                            </xs:appinfo>
                        </xs:annotation>
                    </xs:element>
                    <xs:element minOccurs="0" name="fixedPriceItemDetails" type="tns:FixedPriceItemDetails">
                        <xs:annotation>
                            <xs:documentation>
                                This container is used to specify whether or not variation-level data is returned in the <b>ActiveInventoryReport</b> response. <br><br> This filter is only applicable for multi-variation, fixed-priced listings.
                            </xs:documentation>
                            <xs:appinfo>
                                <CallInfo>
                                    <CallName>startDownloadJob</CallName>
                                    <RequiredInput>No</RequiredInput>
                                </CallInfo>
                            </xs:appinfo>
                        </xs:annotation>
                    </xs:element>
                    <xs:element minOccurs="0" name="auctionItemDetails" type="tns:AuctionItemDetails">
                        <xs:annotation>
                            <xs:documentation>
                                This container is used to specify whether or not the total bid count and/or the <b>ReserveMet</b> boolean (indicating whether or not Reserve Price was met by the highest bid) is returned in the <b>ActiveInventoryReport</b> response. <br><br> This filter is only applicable for auction listings.
                            </xs:documentation>
                            <xs:appinfo>
                                <CallInfo>
                                    <CallName>startDownloadJob</CallName>
                                    <RequiredInput>No</RequiredInput>
                                </CallInfo>
                            </xs:appinfo>
                        </xs:annotation>
                    </xs:element>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="FixedPriceItemDetails">
                <xs:annotation>
                    <xs:documentation>
                        Type defining the <b>fixedPriceItemDetails</b> container, which is used to specify whether or not variation-level data is returned in the <b>ActiveInventoryReport</b> response.
                    </xs:documentation>
                </xs:annotation>
                <xs:sequence>
                    <xs:element minOccurs="0" name="includeVariations" type="xs:boolean">
                        <xs:annotation>
                            <xs:documentation>
                                The boolean value in this field will control whether or not the <b>Variations</b> container is returned in a <b>ActiveInventoryReport</b> response. <br><br> This field is required if the <b>fixedPriceItemDetails</b> container is used in the call request.
                            </xs:documentation>
                            <xs:appinfo>
                                <Default>true</Default>
                                <CallInfo>
                                    <CallName>startDownloadJob</CallName>
                                    <RequiredInput>Conditionally</RequiredInput>
                                </CallInfo>
                            </xs:appinfo>
                        </xs:annotation>
                    </xs:element>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="AuctionItemDetails">
                <xs:annotation>
                    <xs:documentation>
                        Type defining the <b>auctionItemDetails</b> container, which is used to specify whether or not the total bid count and/or the <b>ReserveMet</b> boolean (indicating whether or not Reserve Price was met by the highest bid) is returned in the <b>ActiveInventoryReport</b> response.
                    </xs:documentation>
                </xs:annotation>
                <xs:sequence>
                    <xs:element minOccurs="0" name="includeBidCount" type="xs:boolean">
                        <xs:annotation>
                            <xs:documentation>
                                The boolean value in this field will control whether or not the <b>SKUDetails.BidCount</b> field is returned in a <b>ActiveInventoryReport</b> response.
                            </xs:documentation>
                            <xs:appinfo>
                                <CallInfo>
                                    <CallName>startDownloadJob</CallName>
                                    <RequiredInput>No</RequiredInput>
                                </CallInfo>
                            </xs:appinfo>
                        </xs:annotation>
                    </xs:element>
                    <xs:element minOccurs="0" name="includeReservePriceMet" type="xs:boolean">
                        <xs:annotation>
                            <xs:documentation>
                                The boolean value in this field will control whether or not the <b>SKUDetails.ReserveMet</b> boolean field is returned in a <b>ActiveInventoryReport</b> response.
                            </xs:documentation>
                            <xs:appinfo>
                                <CallInfo>
                                    <CallName>startDownloadJob</CallName>
                                    <RequiredInput>No</RequiredInput>
                                </CallInfo>
                            </xs:appinfo>
                        </xs:annotation>
                    </xs:element>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="GetItemInfoReportFilter">
                <xs:annotation>
                    <xs:documentation>Reserved for internal or future use.</xs:documentation>
                </xs:annotation>
                <xs:sequence>
                    <xs:element name="jobAction" type="tns:GetItemJobActionType">
                        <xs:annotation>
                            <xs:documentation>Reserved for internal or future use.</xs:documentation>
                        </xs:annotation>
                    </xs:element>
                    <xs:element name="filterType" type="tns:ItemEventType">
                        <xs:annotation>
                            <xs:documentation>Reserved for internal or future use.</xs:documentation>
                        </xs:annotation>
                    </xs:element>
                    <xs:element minOccurs="0" name="includeAttributes" type="xs:boolean">
                        <xs:annotation>
                            <xs:documentation>Reserved for internal or future use.</xs:documentation>
                        </xs:annotation>
                    </xs:element>
                    <xs:element minOccurs="0" name="includeDescription" type="xs:boolean">
                        <xs:annotation>
                            <xs:documentation>Reserved for internal or future use.</xs:documentation>
                        </xs:annotation>
                    </xs:element>
                    <xs:element minOccurs="0" name="reportDateFrom" type="xs:dateTime">
                        <xs:annotation>
                            <xs:documentation>Reserved for internal or future use.</xs:documentation>
                        </xs:annotation>
                    </xs:element>
                    <xs:element minOccurs="0" name="reportDateTo" type="xs:dateTime">
                        <xs:annotation>
                            <xs:documentation>Reserved for internal or future use.</xs:documentation>
                        </xs:annotation>
                    </xs:element>
                    <xs:element maxOccurs="unbounded" minOccurs="0" name="timeFrame" type="xs:token">
                        <xs:annotation>
                            <xs:documentation>Reserved for internal or future use.</xs:documentation>
                        </xs:annotation>
                    </xs:element>
                    <xs:element maxOccurs="unbounded" minOccurs="0" name="changedFieldSelector" type="xs:token">
                        <xs:annotation>
                            <xs:documentation>Reserved for internal or future use.</xs:documentation>
                        </xs:annotation>
                    </xs:element>
                </xs:sequence>
            </xs:complexType>
            <xs:simpleType name="ItemEventType">
                <xs:annotation>
                    <xs:documentation>Reserved for internal or future use.</xs:documentation>
                </xs:annotation>
                <xs:restriction base="xs:token">
                    <xs:enumeration value="New">
                        <xs:annotation>
                            <xs:documentation>Reserved for internal or future use.</xs:documentation>
                        </xs:annotation>
                    </xs:enumeration>
                    <xs:enumeration value="Changed">
                        <xs:annotation>
                            <xs:documentation>Reserved for internal or future use.</xs:documentation>
                        </xs:annotation>
                    </xs:enumeration>
                </xs:restriction>
            </xs:simpleType>
            <xs:simpleType name="IncludeListingType">
                <xs:annotation>
                    <xs:documentation>
                        Simple type defining the listing types that may be specified in the <b>includeListingType</b> field to control whether fixed-price and/or auction listings are returned in an <b>ActiveInventoryReport</b> response.
                    </xs:documentation>
                </xs:annotation>
                <xs:restriction base="xs:token">
                    <xs:enumeration value="Auction">
                        <xs:annotation>
                            <xs:documentation>
                                This value is specified in the <b>includeListingType</b> field if the user wants to limit the data returned in the <b>ActiveInventoryReport</b> response to auction listings.
                            </xs:documentation>
                        </xs:annotation>
                    </xs:enumeration>
                    <xs:enumeration value="FixedPrice">
                        <xs:annotation>
                            <xs:documentation>
                                This value is specified in the <b>includeListingType</b> field if the user wants to limit the data returned in the <b>ActiveInventoryReport</b> response to fixed-price listings.
                            </xs:documentation>
                        </xs:annotation>
                    </xs:enumeration>
                    <xs:enumeration value="AuctionAndFixedPrice">
                        <xs:annotation>
                            <xs:documentation>
                                This value is specified in the <b>includeListingType</b> field if the user wants data from both auction and fixed-price listings returned in the <b>ActiveInventoryReport</b> response.
                            </xs:documentation>
                        </xs:annotation>
                    </xs:enumeration>
                </xs:restriction>
            </xs:simpleType>
            <xs:complexType name="GetItemJobActionType">
                <xs:annotation>
                    <xs:documentation>Reserved for internal or future use.</xs:documentation>
                </xs:annotation>
                <xs:sequence>
                    <xs:element minOccurs="0" name="action" type="xs:token">
                        <xs:annotation>
                            <xs:documentation>Reserved for internal or future use.</xs:documentation>
                        </xs:annotation>
                    </xs:element>
                    <xs:element name="jobId" type="xs:string">
                        <xs:annotation>
                            <xs:documentation>Reserved for internal or future use.</xs:documentation>
                        </xs:annotation>
                    </xs:element>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="CreateRecurringJobRequest">
                <xs:annotation>
                    <xs:documentation>
                        Creates a recurring Bulk Data Exchange job and assigns it a <b>recurringJobId</b>. When you create a recurring job, you must specify a recurrence interval, such as daily, weekly, monthly, or a frequency in minutes. <br><br> Once a recurring job has been created, a separate job ID is created for each job that is created/executed. For example, if a job runs every hour, it will have a single <b>recurringJobId</b> and each hourly job will have a unique <b>jobId</b> and <b>fileReferenceId</b>.
                    </xs:documentation>
                    <xs:appinfo>
                        <Summary>Creates a recurring Bulk Data Exchange Job.</Summary>
                        <TempInfo>samples</TempInfo>
                    </xs:appinfo>
                </xs:annotation>
                <xs:complexContent>
                    <xs:extension base="tns:BaseServiceRequest">
                        <xs:sequence>
                            <xs:element name="UUID" type="xs:string">
                                <xs:annotation>
                                    <xs:documentation>
                                        A Universally Unique Identifier (UUID) provided by the seller's application.
                                    </xs:documentation>
                                    <xs:appinfo>
                                        <CallInfo>
                                            <CallName>createRecurringJob</CallName>
                                            <RequiredInput>Yes</RequiredInput>
                                        </CallInfo>
                                    </xs:appinfo>
                                </xs:annotation>
                            </xs:element>
                            <xs:element name="downloadJobRecurringFilter" type="tns:DownloadJobRecurringFilter">
                                <xs:annotation>
                                    <xs:documentation>
                                        Specifies the filters for creating recurring jobs for different LMS downlaod job types
                                    </xs:documentation>
                                    <xs:appinfo>
                                        <CallInfo>
                                            <CallName>createRecurringJob</CallName>
                                            <RequiredInput>No</RequiredInput>
                                        </CallInfo>
                                    </xs:appinfo>
                                </xs:annotation>
                            </xs:element>
                            <xs:element minOccurs="0" name="frequencyInMinutes" type="xs:int">
                                <xs:annotation>
                                    <xs:documentation>
                                        Use this field to set up a recurring job that happens more than once a day. After the initial job instance is executed, the subsequent job instances will be executed according to the frequency (in minutes) set in the <b>frequencyInMinutes</b> field. <br><br> If this field is used, the <b>weeklyRecurrence</b> and <b>dailyRecurrence</b> and <b>monthlyRecurrence</b> containers should not be used.
                                    </xs:documentation>
                                    <xs:appinfo>
                                        <CallInfo>
                                            <Min>1</Min>
                                            <CallName>createRecurringJob</CallName>
                                            <RequiredInput>No</RequiredInput>
                                        </CallInfo>
                                    </xs:appinfo>
                                </xs:annotation>
                            </xs:element>
                            <xs:element name="downloadJobType" type="xs:token">
                                <xs:annotation>
                                    <xs:documentation>
                                        Specifies the report you want to download. Each Bulk Data Exchange job can only have one job type per job. For instance, if you are downloading a <b>SoldReport</b>, it will only have predefined <b>SoldReport</b> data within the file. <br><br> <dl> <lh><b>Applicable values</b>:<br></lh> <dt><b>ActiveInventoryReport</b></dt> <dd>A report that contains all of the active listings for a specific seller ID. The eBay servers read the credential information passed in by the seller's application to determine which seller's data to retrieve. </dd> <dt><b>FeeSettlementReport</b></dt> <dd>A report that contains all of the fees that you have incurred as invoices are generated by the eBay servers. This report gives large merchants the ability to look at their fees for many listings in one file. </dd> <dt><b>SoldReport</b></dt> <dd>Lists all items that have been sold by this seller (sold items that were submitted to the Large Merchant Service by the seller's application). <br><br> When an item is sold, the eBay application creates an 'order' for the seller. If only one item is sold, there is one order ID and one line item ID associated with the sale. However, if multiple items are sold as part of the same transaction, there is one order ID for the sale, and multiple line item IDs - one line item ID for each item sold. <br><br> Therefore, <b>SoldReport</b> returns the order IDs and line item IDs for every order associated with the seller who is making the request. Sellers use this information to make inventory updates and start order fulfillment. <br><br> When orders have been fulfilled, the seller will probably want to remove them from the list of all orders that comes back every time they receive a <b>SoldReport</b>. To do this, they can acknowledge each order that has been fulfilled (using order ID or line item ID) by uploading a list of the fulfilled order information using an <b>OrderAck</b> request. <br><br> After you upload a data file with an <b>OrderAck</b> request, the orders (or line items within an order) will no longer appear in <b>SoldReport</b>. After you send the first <b>OrderAck</b> call, future <b>SoldReport</b> responses will only contain unacknowledged orders and line items. </dd> </dl>
                                    </xs:documentation>
                                    <xs:appinfo>
                                        <ListBasedOn/>
                                        <CallInfo>
                                            <CallName>createRecurringJob</CallName>
                                            <RequiredInput>Yes</RequiredInput>
                                        </CallInfo>
                                    </xs:appinfo>
                                </xs:annotation>
                            </xs:element>
                            <xs:element minOccurs="0" name="monthlyRecurrence" type="tns:MonthlyRecurrence">
                                <xs:annotation>
                                    <xs:documentation>
                                        Optional container that can be used to create a recurring job that is executed on a monthly basis. If this container is used, the <b>weeklyRecurrence</b> and <b>dailyRecurrence</b> containers should not be used.
                                    </xs:documentation>
                                    <xs:appinfo>
                                        <CallInfo>
                                            <CallName>createRecurringJob</CallName>
                                            <RequiredInput>No</RequiredInput>
                                        </CallInfo>
                                    </xs:appinfo>
                                </xs:annotation>
                            </xs:element>
                            <xs:element minOccurs="0" name="weeklyRecurrence" type="tns:WeeklyRecurrence">
                                <xs:annotation>
                                    <xs:documentation>
                                        Optional container that can be used to create a recurring job that is executed on a weekly basis. If this container is used, the <b>monthlyRecurrence</b> and <b>dailyRecurrence</b> containers should not be used.
                                    </xs:documentation>
                                    <xs:appinfo>
                                        <CallInfo>
                                            <CallName>createRecurringJob</CallName>
                                            <RequiredInput>No</RequiredInput>
                                        </CallInfo>
                                    </xs:appinfo>
                                </xs:annotation>
                            </xs:element>
                            <xs:element minOccurs="0" name="dailyRecurrence" type="tns:DailyRecurrence">
                                <xs:annotation>
                                    <xs:documentation>
                                        Optional container that can be used to create a recurring job that is executed on a weekly basis. If this container is used, the <b>weeklyRecurrence</b> and <b>monthlyRecurrence</b> containers should not be used.
                                    </xs:documentation>
                                    <xs:appinfo>
                                        <CallInfo>
                                            <CallName>createRecurringJob</CallName>
                                            <RequiredInput>No</RequiredInput>
                                        </CallInfo>
                                    </xs:appinfo>
                                </xs:annotation>
                            </xs:element>
                        </xs:sequence>
                    </xs:extension>
                </xs:complexContent>
            </xs:complexType>
            <xs:complexType name="DownloadJobRecurringFilter">
                <xs:annotation>
                    <xs:documentation>
                        Creates a recurring Bulk Data Exchange job for different LMS Reports and assigns it a <b class="con">recurringJobId</b>. When you create a recurring job, you must specify a recurrence interval, such as daily, weekly, monthly, or a frequency in minutes. <br><br> Once a recurring job has been created, a separate job ID is created for each job that is created/executed. For example, if a job runs every hour, it will have a single <b class="con">recurringJobId</b> and each hourly job will have a unique <b class="con">jobId</b> and <b class="con">fileReferenceI</b>d.
                    </xs:documentation>
                    <xs:appinfo>
                        <Summary>
                            Creates a recurring Bulk Data Exchange Job for different LMS Reports.
                        </Summary>
                        <TempInfo>samples</TempInfo>
                    </xs:appinfo>
                </xs:annotation>
                <xs:complexContent>
                    <xs:extension base="tns:BaseServiceRequest">
                        <xs:sequence>
                            <xs:element minOccurs="0" name="orderReportRecurringFilter" type="tns:OrderReportRecurringFilter">
                                <xs:annotation>
                                    <xs:documentation>Creates a recurrring job for Order Report.</xs:documentation>
                                    <xs:appinfo>
                                        <CallInfo>
                                            <CallName>createRecurringJob</CallName>
                                            <RequiredInput>No</RequiredInput>
                                        </CallInfo>
                                    </xs:appinfo>
                                </xs:annotation>
                            </xs:element>
                        </xs:sequence>
                    </xs:extension>
                </xs:complexContent>
            </xs:complexType>
            <xs:complexType name="OrderReportRecurringFilter">
                <xs:annotation>
                    <xs:documentation>
                        Creates a recurring Bulk Data Exchange job for Order Report and assigns it a <b class="con">recurringJobId</b>. When creating a recurring job for OrderReport, you must specify the version, you must specify a recurrence interval, such as daily, weekly, monthly, or a frequency in minutes. You may specify the listingType as 'Half' else by default only 'ebay' orders are returned. You may specify the createTimeRange or modTimeRange to sepcify the time range for which orders will be returned createTimeRange if provided with modTimeRnage then createTimeRange takes precedence and modTimeRange is ignored. else the default range is 30 days from the job start time. Be dafault, Orders returned will have includeFinalValueFee = false and all orders with orderStatus = completed, cancelled, active and shipped will be returned. <br><br> Once a recurring job has been created, a separate job ID is created for each job that is created/executed. For example, if a job runs every hour, it will have a single <b class="con">recurringJobId</b> and each hourly job will have a unique <b class="con">jobId</b> and <b class="con">fileReferenceI</b>d.
                    </xs:documentation>
                    <xs:appinfo>
                        <Summary>
                            Creates a recurring Bulk Data Exchange Job for Order Report
                        </Summary>
                        <TempInfo>samples</TempInfo>
                    </xs:appinfo>
                </xs:annotation>
                <xs:complexContent>
                    <xs:extension base="tns:BaseServiceRequest">
                        <xs:sequence>
                            <xs:element minOccurs="0" name="createTimeRange" type="xs:int">
                                <xs:annotation>
                                    <xs:documentation>
                                        Specify the range in minutes. The Order Report will retrieve orders that have not been acked during the provided create time range
                                    </xs:documentation>
                                    <xs:appinfo>
                                        <CallInfo>
                                            <CallName>createRecurringJob</CallName>
                                            <RequiredInput>No</RequiredInput>
                                        </CallInfo>
                                    </xs:appinfo>
                                </xs:annotation>
                            </xs:element>
                            <xs:element minOccurs="0" name="modTimeRange" type="xs:int">
                                <xs:annotation>
                                    <xs:documentation>
                                        Specify the range in minutes. The Order Report will retrieve orders that have not been acked during the provided modified time range
                                    </xs:documentation>
                                    <xs:appinfo>
                                        <CallInfo>
                                            <CallName>createRecurringJob</CallName>
                                            <RequiredInput>No</RequiredInput>
                                        </CallInfo>
                                    </xs:appinfo>
                                </xs:annotation>
                            </xs:element>
                            <xs:element name="listingType" minOccurs="0" type="tns:ListingType">
                                <xs:annotation>
                                    <xs:documentation>
                                        This field must be included and must be set to 'Half' in order to retrieve the seller's Half.com orders. <br><br> <span class="tablenote"><strong>Note:</strong> Do not use this field if you are retrieving eBay.com orders. <br><br>
                                    </xs:documentation>
                                    <xs:appinfo>
                                        <CallInfo>
                                            <CallName>createRecurringJob</CallName>
                                            <RequiredInput>Conditionally</RequiredInput>
                                        </CallInfo>
                                    </xs:appinfo>
                                </xs:annotation>
                            </xs:element>
                            <xs:element name="version" minOccurs="1" type="xs:int">
                                <xs:annotation>
                                    <xs:documentation>
                                        The value input into this field indicates the version number of the Trading API (specifically, GetOrders) that will be called when the <strong>orderReport</strong> response is generated. This value must be a valid Trading API version number and it must be Version 841 or later. If an older version is used, <strong>orderReport</strong> will fail. <br><br> This field is required if the <strong>orderReportRecurringFilter</strong> container is used.
                                    </xs:documentation>
                                    <xs:appinfo>
                                        <CallInfo>
                                            <CallName>createRecurringJob</CallName>
                                            <RequiredInput>Conditionally</RequiredInput>
                                        </CallInfo>
                                    </xs:appinfo>
                                </xs:annotation>
                            </xs:element>
                        </xs:sequence>
                    </xs:extension>
                </xs:complexContent>
            </xs:complexType>
            <xs:complexType name="DeleteRecurringJobRequest">
                <xs:annotation>
                    <xs:documentation>
                        Deletes the recurring job. If you only want to delete a single instance of the recurring job, use <b>abortRecurringJob</b>. If you only want to stop the recurring job, but plan to start it again later, use <b>suspendRecurringJob</b>.
                    </xs:documentation>
                    <xs:appinfo>
                        <Summary>Deletes recurring job.</Summary>
                        <TempInfo>samples</TempInfo>
                    </xs:appinfo>
                </xs:annotation>
                <xs:complexContent>
                    <xs:extension base="tns:BaseServiceRequest">
                        <xs:sequence>
                            <xs:element name="recurringJobId" type="xs:string">
                                <xs:annotation>
                                    <xs:documentation>
                                        Unique ID assigned by the Bulk Data Exchange API for managing your recurring job. Use the <b>recurringJobId</b> value returned in the <b>createRecurringJob</b> response. You can also use <b>getRecurringJobs</b> to retrieve <b>recurringJobId</b> values for any recurring jobs you have created.
                                    </xs:documentation>
                                    <xs:appinfo>
                                        <CallInfo>
                                            <CallName>deleteRecurringJob</CallName>
                                            <RequiredInput>Yes</RequiredInput>
                                        </CallInfo>
                                    </xs:appinfo>
                                </xs:annotation>
                            </xs:element>
                        </xs:sequence>
                    </xs:extension>
                </xs:complexContent>
            </xs:complexType>
            <xs:complexType name="GetRecurringJobsRequest">
                <xs:annotation>
                    <xs:documentation>
                        Get all recurring jobs submitted by this seller. There should only be one recurring job per job type.
                    </xs:documentation>
                    <xs:appinfo>
                        <Summary>Get all recurring jobs submitted by this seller.</Summary>
                        <TempInfo>samples</TempInfo>
                    </xs:appinfo>
                </xs:annotation>
                <xs:complexContent>
                    <xs:extension base="tns:BaseServiceRequest">
                        <xs:sequence></xs:sequence>
                    </xs:extension>
                </xs:complexContent>
            </xs:complexType>
            <xs:complexType name="GetRecurringJobExecutionStatusRequest">
                <xs:annotation>
                    <xs:documentation>
                        Returns the status information for the latest instance of a recurring job. To see all instances of a recurring job, use <b>getRecurringJobExecutionHistory</b>.
                    </xs:documentation>
                    <xs:appinfo>
                        <Summary>Check recurring job execution status.</Summary>
                        <TempInfo>samples</TempInfo>
                    </xs:appinfo>
                </xs:annotation>
                <xs:complexContent>
                    <xs:extension base="tns:BaseServiceRequest">
                        <xs:sequence>
                            <xs:element name="recurringJobId" type="xs:string">
                                <xs:annotation>
                                    <xs:documentation>
                                        Unique ID assigned by the Bulk Data Exchange API for managing your recurring job. Use the <b>recurringJobId</b> value returned in the <b>createRecurringJob</b> response. You can also use <b>getRecurringJobs</b> to retrieve <b>recurringJobId</b> values for any recurring jobs you have created.
                                    </xs:documentation>
                                    <xs:appinfo>
                                        <CallInfo>
                                            <CallName>getRecurringJobExecutionStatus</CallName>
                                            <RequiredInput>Yes</RequiredInput>
                                        </CallInfo>
                                    </xs:appinfo>
                                </xs:annotation>
                            </xs:element>
                        </xs:sequence>
                    </xs:extension>
                </xs:complexContent>
            </xs:complexType>
            <xs:complexType name="GetRecurringJobExecutionHistoryRequest">
                <xs:annotation>
                    <xs:documentation>
                        Returns all instances of a recurring job that have occurred so far. To see only the status information for the latest instance of a recurring job, use <b>getRecurringJobExecutionStatus</b>.
                    </xs:documentation>
                    <xs:appinfo>
                        <Summary>
                            Returns all instances of a recurring job that have occurred so far.
                        </Summary>
                        <TempInfo>samples</TempInfo>
                    </xs:appinfo>
                </xs:annotation>
                <xs:complexContent>
                    <xs:extension base="tns:BaseServiceRequest">
                        <xs:sequence>
                            <xs:element minOccurs="0" name="startTime" type="xs:dateTime">
                                <xs:annotation>
                                    <xs:documentation>
                                        The <b>startTime</b> and <b>endTime</b> date range filters can be used to restrict recurring job instances retrieved in the response to those instances executed within the specified date range. <br/><br/> The <b>startTime</b> is the starting date/time for the date range. The <b>startTime</b> must be older than the <b>endTime</b> (if one is specified). If a <b>startTime</b> is specified, but an <b>endTime</b> value is not, the ending date/time of the date range defaults to the current date/time.
                                    </xs:documentation>
                                    <xs:appinfo>
                                        <CallInfo>
                                            <CallName>getRecurringJobExecutionHistory</CallName>
                                            <RequiredInput>No</RequiredInput>
                                        </CallInfo>
                                    </xs:appinfo>
                                </xs:annotation>
                            </xs:element>
                            <xs:element minOccurs="0" name="endTime" type="xs:dateTime">
                                <xs:annotation>
                                    <xs:documentation>
                                        The <b>startTime</b> and <b>endTime</b> date range filters can be used to restrict recurring job instances retrieved in the response to those instances executed within the specified date range. <br/><br/> The <b>endTime</b> is the ending date/time for the date range. The <b>endTime</b> must be more recent than the <b>startTime</b> (if one is specified). If an <b>endTime</b> is specified, but an <b>startTime</b> value is not, all recurring job instances (for which data exists) executed before the <b>endTime</b> value are retrieved.
                                    </xs:documentation>
                                    <xs:appinfo>
                                        <CallInfo>
                                            <CallName>getRecurringJobExecutionHistory</CallName>
                                            <RequiredInput>No</RequiredInput>
                                        </CallInfo>
                                    </xs:appinfo>
                                </xs:annotation>
                            </xs:element>
                            <xs:element name="recurringJobId" type="xs:string">
                                <xs:annotation>
                                    <xs:documentation>
                                        Unique ID assigned by the Bulk Data Exchange API for managing your recurring job. The specified <b>recurringJobId</b> value will control which recurring job instances are retrieved in the response. <br/><br/> <b>recurringJobId</b> values are returned in <b>createRecurringJob</b> responses, and you can also use <b>getRecurringJobs</b> to retrieve <b>recurringJobId</b> values for any recurring jobs you have created.
                                    </xs:documentation>
                                    <xs:appinfo>
                                        <CallInfo>
                                            <CallName>getRecurringJobExecutionHistory</CallName>
                                            <RequiredInput>Yes</RequiredInput>
                                        </CallInfo>
                                    </xs:appinfo>
                                </xs:annotation>
                            </xs:element>
                            <xs:element maxOccurs="unbounded" minOccurs="0" name="jobStatus" type="tns:JobStatus">
                                <xs:annotation>
                                    <xs:documentation>
                                        This field is used to retrieve recurring job instances in various states. If this field is not used, recurring job instances in all states are retrieved.
                                    </xs:documentation>
                                    <xs:appinfo>
                                        <CallInfo>
                                            <CallName>getRecurringJobExecutionHistory</CallName>
                                            <RequiredInput>No</RequiredInput>
                                        </CallInfo>
                                    </xs:appinfo>
                                </xs:annotation>
                            </xs:element>
                        </xs:sequence>
                    </xs:extension>
                </xs:complexContent>
            </xs:complexType>
            <xs:complexType name="ActivateRecurringJobRequest">
                <xs:annotation>
                    <xs:documentation>
                        Restarts a recurring job that had previously been suspended.
                    </xs:documentation>
                    <xs:appinfo>
                        <Summary>Restarts a recurring job that has been suspended.</Summary>
                        <TempInfo>samples</TempInfo>
                    </xs:appinfo>
                </xs:annotation>
                <xs:complexContent>
                    <xs:extension base="tns:BaseServiceRequest">
                        <xs:sequence>
                            <xs:element name="recurringJobId" type="xs:string">
                                <xs:annotation>
                                    <xs:documentation>
                                        Unique ID assigned by the Bulk Data Exchange API for managing your recurring job. The specified <b>recurringJobId</b> value will control which recurring job is activated. <br/><br/> <b>recurringJobId</b> values are returned in <b>createRecurringJob</b> responses, and you can also use <b>getRecurringJobs</b> to retrieve <b>recurringJobId</b> values for any recurring jobs you have created.
                                    </xs:documentation>
                                    <xs:appinfo>
                                        <CallInfo>
                                            <CallName>activateRecurringJob</CallName>
                                            <RequiredInput>Yes</RequiredInput>
                                        </CallInfo>
                                    </xs:appinfo>
                                </xs:annotation>
                            </xs:element>
                        </xs:sequence>
                    </xs:extension>
                </xs:complexContent>
            </xs:complexType>
            <xs:complexType name="SuspendRecurringJobRequest">
                <xs:annotation>
                    <xs:documentation>
                        This call is used to temporarily suspend the processing of the recurring job.
                    </xs:documentation>
                    <xs:appinfo>
                        <Summary>Stops the processing for a recurring job.</Summary>
                        <TempInfo>samples</TempInfo>
                    </xs:appinfo>
                </xs:annotation>
                <xs:complexContent>
                    <xs:extension base="tns:BaseServiceRequest">
                        <xs:sequence>
                            <xs:element name="recurringJobId" type="xs:string">
                                <xs:annotation>
                                    <xs:documentation>
                                        Unique ID assigned by the Bulk Data Exchange API for managing your recurring job. The specified <b>recurringJobId</b> value will control which recurring job is temporarily suspended. <br/><br/> <b>recurringJobId</b> values are returned in <b>createRecurringJob</b> responses, and you can also use <b>getRecurringJobs</b> to retrieve <b>recurringJobId</b> values for any recurring jobs you have created.
                                    </xs:documentation>
                                    <xs:appinfo>
                                        <CallInfo>
                                            <CallName>suspendRecurringJob</CallName>
                                            <RequiredInput>Yes</RequiredInput>
                                        </CallInfo>
                                    </xs:appinfo>
                                </xs:annotation>
                            </xs:element>
                        </xs:sequence>
                    </xs:extension>
                </xs:complexContent>
            </xs:complexType>
            <xs:complexType name="AbortRecurringJobExecutionRequest">
                <xs:annotation>
                    <xs:documentation>
                        Deletes the next instance of a recurring job. The recurring job will resume with subsequent job instance. Use <b>getRecurringJobExecutionHistory</b> and <b>getRecurringJobExecutionStatus</b> to identify any reporting gaps.
                    </xs:documentation>
                    <xs:appinfo>
                        <Summary>Deletes the next instance of a recurring job.</Summary>
                        <RelatedCalls>
                            getRecurringJobExecutionHistory,getRecurringJobExecutionStatus
                        </RelatedCalls>
                        <TempInfo>samples</TempInfo>
                    </xs:appinfo>
                </xs:annotation>
                <xs:complexContent>
                    <xs:extension base="tns:BaseServiceRequest">
                        <xs:sequence>
                            <xs:element name="recurringJobId" type="xs:string">
                                <xs:annotation>
                                    <xs:documentation>
                                        Unique ID assigned by the Bulk Data Exchange API for managing your recurring job. The specified <b>recurringJobId</b> value will control which recurring job will be deleted in its next instance. <br/><br/> <b>recurringJobId</b> values are returned in <b>createRecurringJob</b> responses, and you can also use <b>getRecurringJobs</b> to retrieve <b>recurringJobId</b> values for any recurring jobs you have created.
                                    </xs:documentation>
                                    <xs:appinfo>
                                        <CallInfo>
                                            <CallName>abortRecurringJobExecution</CallName>
                                            <RequiredInput>Yes</RequiredInput>
                                        </CallInfo>
                                    </xs:appinfo>
                                </xs:annotation>
                            </xs:element>
                        </xs:sequence>
                    </xs:extension>
                </xs:complexContent>
            </xs:complexType>
            <xs:complexType abstract="true" name="BaseServiceRequest">
                <xs:annotation>
                    <xs:documentation>
                        This type defines the request container for all service operations.
                    </xs:documentation>
                    <xs:appinfo>
                        <typeLibrarySource library="MarketPlaceServiceCommonTypeLibrary" namespace="http://www.ebay.com/marketplace/services"/>
                    </xs:appinfo>
                </xs:annotation>
            </xs:complexType>
            <xs:complexType abstract="true" name="BaseServiceResponse">
                <xs:annotation>
                    <xs:documentation>
                        This type defines the response container for all service operations. Contains error information associated with the request.
                    </xs:documentation>
                    <xs:appinfo>
                        <typeLibrarySource library="MarketPlaceServiceCommonTypeLibrary" namespace="http://www.ebay.com/marketplace/services"/>
                    </xs:appinfo>
                </xs:annotation>
                <xs:sequence>
                    <xs:element name="ack" type="tns:AckValue">
                        <xs:annotation>
                            <xs:documentation>
                                Returns the acknowledgement of the call success or failure.
                            </xs:documentation>
                            <xs:appinfo>
                                <CallInfo>
                                    <AllCalls/>
                                    <Returned>Always</Returned>
                                </CallInfo>
                            </xs:appinfo>
                        </xs:annotation>
                    </xs:element>
                    <xs:element minOccurs="0" name="errorMessage" type="tns:ErrorMessage">
                        <xs:annotation>
                            <xs:documentation>
                                Description of an error or warning that occurred when eBay processed the request. Not returned if the ack value is Success.
                            </xs:documentation>
                            <xs:appinfo>
                                <CallInfo>
                                    <AllCalls/>
                                    <Returned>Conditionally</Returned>
                                </CallInfo>
                            </xs:appinfo>
                        </xs:annotation>
                    </xs:element>
                    <xs:element minOccurs="0" name="version" type="xs:string">
                        <xs:annotation>
                            <xs:documentation>
                                The release version that eBay used to process the request. Developer Technical Support may ask you for the version value if you work with them to troubleshoot issues. <br><br> <span class="tablenote"><strong>Note:</strong> The version in use is normally the latest release version, as specified in the release notes. Note that eBay releases the API to international sites about a week after the API version is released to the US site. </span>
                            </xs:documentation>
                            <xs:appinfo>
                                <CallInfo>
                                    <AllCalls/>
                                    <Returned>Always</Returned>
                                </CallInfo>
                            </xs:appinfo>
                        </xs:annotation>
                    </xs:element>
                    <xs:element minOccurs="0" name="timestamp" type="xs:dateTime">
                        <xs:annotation>
                            <xs:documentation>
                                This value represents the date and time when eBay processed the request. This value is returned in GMT, the ISO 8601 date and time format (YYYY- MM- DDTHH:MM:SS.SSSZ). See the "dateTime" type for information about the time format, and for details on converting to and from the GMT time zone.
                            </xs:documentation>
                            <xs:appinfo>
                                <CallInfo>
                                    <AllCalls/>
                                    <Returned>Always</Returned>
                                </CallInfo>
                            </xs:appinfo>
                        </xs:annotation>
                    </xs:element>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="CreateUploadJobResponse">
                <xs:annotation>
                    <xs:documentation>
                        Type defining the root container of the <b>createUploadJob</b> response. The response includes the job ID, a file reference ID, the maximum upload file size for the data file, and the standard output fields like <b>ack</b>, <b>timestamp</b>, <b>version</b>, and any errors/warnings that are generated by the request to create an upload job. <br> <br> The call-specific data will be needed when using the <b>uploadFile</b> call of the File Transfer API.
                    </xs:documentation>
                </xs:annotation>
                <xs:complexContent>
                    <xs:extension base="tns:BaseServiceResponse">
                        <xs:sequence>
                            <xs:element minOccurs="0" name="jobId" type="xs:string">
                                <xs:annotation>
                                    <xs:documentation>
                                        Unique ID assigned by the Bulk Data Exchange API for managing your upload job. Use this <b>jobId</b> to activate (<b>startUploadJob</b>b) or abort (<b>abortJob</b>) processing of an uploaded file. You can also use <b>jobId</b> in <b>getJobStatus</b> to check on processing progress for a job. <br><br> Before you can start an upload job, you must upload the corresponding data file, using the File Transfer API. In the File Transfer API, <b>jobId</b> maps to <b>taskReferenceId</b> in the <b>uploadFile</b> call.
                                    </xs:documentation>
                                    <xs:appinfo>
                                        <CallInfo>
                                            <CallName>createUploadJob</CallName>
                                            <Returned>Always</Returned>
                                        </CallInfo>
                                    </xs:appinfo>
                                </xs:annotation>
                            </xs:element>
                            <xs:element minOccurs="0" name="fileReferenceId" type="xs:string">
                                <xs:annotation>
                                    <xs:documentation>
                                        A unique ID assigned to a file by the Bulk Data Exchange API. This value will be passed into the <b>fileReferenceId</b> field in the File Transfer API's <b>uploadFile</b> call.
                                    </xs:documentation>
                                    <xs:appinfo>
                                        <CallInfo>
                                            <CallName>createUploadJob</CallName>
                                            <Returned>Always</Returned>
                                        </CallInfo>
                                    </xs:appinfo>
                                </xs:annotation>
                            </xs:element>
                            <xs:element minOccurs="0" name="maxFileSize" type="xs:string">
                                <xs:annotation>
                                    <xs:documentation>
                                        This value indicates the maximum size of a file that may be uploaded or downloaded. Currently, the default maximum size is 15MB. The number of calls allowed in a data file that you want to upload varies with the size of the Item description, the type of data in the description, and the complexity of each call in your file.
                                    </xs:documentation>
                                    <xs:appinfo>
                                        <CallInfo>
                                            <CallName>createUploadJob</CallName>
                                            <Returned>Always</Returned>
                                        </CallInfo>
                                    </xs:appinfo>
                                </xs:annotation>
                            </xs:element>
                        </xs:sequence>
                    </xs:extension>
                </xs:complexContent>
            </xs:complexType>
            <xs:complexType name="StartUploadJobResponse">
                <xs:annotation>
                    <xs:documentation>
                        Type defining the root container of the <b>startUploadJob</b> response. The response includes the standard output fields like <b>ack</b>, <b>timestamp</b>, <b>version</b>, and any errors/warnings that are generated by the request to start an upload job.
                    </xs:documentation>
                </xs:annotation>
                <xs:complexContent>
                    <xs:extension base="tns:BaseServiceResponse">
                        <xs:sequence></xs:sequence>
                    </xs:extension>
                </xs:complexContent>
            </xs:complexType>
            <xs:complexType name="AbortJobResponse">
                <xs:annotation>
                    <xs:documentation>
                        Type defining the root container of the <b>abortJob</b> response. The response includes the standard output fields like <b>ack</b>, <b>timestamp</b>, <b>version</b>, and any errors/warnings that are generated by the request to abort a job.
                    </xs:documentation>
                </xs:annotation>
                <xs:complexContent>
                    <xs:extension base="tns:BaseServiceResponse">
                        <xs:sequence></xs:sequence>
                    </xs:extension>
                </xs:complexContent>
            </xs:complexType>
            <xs:complexType name="GetJobsResponse">
                <xs:annotation>
                    <xs:documentation>
                        Type defining the root container of the <b>getJobs</b> response. The response includes one or more <b>jobProfile</b> containers, consisting of unique identifiers and job status and data for each retrieved job, as well as the standard output fields like <b>ack</b>, <b>timestamp</b>, <b>version</b>, and any errors/warnings that are generated by the request to retrieve jobs. <br> <br> The call-specific data will be needed when using the <b>uploadFile</b> call of the File Transfer API.
                    </xs:documentation>
                </xs:annotation>
                <xs:complexContent>
                    <xs:extension base="tns:BaseServiceResponse">
                        <xs:sequence>
                            <xs:element maxOccurs="unbounded" minOccurs="0" name="jobProfile" type="tns:JobProfile">
                                <xs:annotation>
                                    <xs:documentation>
                                        One or more <b>jobProfile</b> containers are returned for each retrieved job. The <b>jobProfile</b> container consists of unique identifiers for the job, as well as data that indicates the current status of the job. <br><br> The job profile returns data about the state of the Bulk Data Exchange job, but does not return information about the status of the processing for any data file that is sent with the job request or returned with the job response.
                                    </xs:documentation>
                                    <xs:appinfo>
                                        <CallInfo>
                                            <CallName>getJobs</CallName>
                                            <Returned>Always</Returned>
                                        </CallInfo>
                                    </xs:appinfo>
                                </xs:annotation>
                            </xs:element>
                        </xs:sequence>
                    </xs:extension>
                </xs:complexContent>
            </xs:complexType>
            <xs:complexType name="GetJobStatusResponse">
                <xs:annotation>
                    <xs:documentation>
                        Type defining the root container of the <b>getJobStatus</b> response. The response includes one <b>jobProfile</b> container, consisting of unique identifiers and job status and data for the job specified in the <b>jobId</b> field in the request. The response also includes standard output fields like <b>ack</b>, <b>timestamp</b>, <b>version</b>, and any errors/warnings that are generated by the request to retrieve the job.
                    </xs:documentation>
                </xs:annotation>
                <xs:complexContent>
                    <xs:extension base="tns:BaseServiceResponse">
                        <xs:sequence>
                            <xs:element maxOccurs="unbounded" minOccurs="0" name="jobProfile" type="tns:JobProfile">
                                <xs:annotation>
                                    <xs:documentation>
                                        A <b>jobProfile</b> container is returned for a successfully retrieved job. The <b>jobProfile</b> container consists of unique identifiers for the job, as well as data that indicates the current status of the job. <br><br> The job profile returns data about the state of the Bulk Data Exchange job, but does not return information about the status of the processing for any data file that is sent with the job request or returned with the job response.
                                    </xs:documentation>
                                    <xs:appinfo>
                                        <CallInfo>
                                            <CallName>getJobStatus</CallName>
                                            <Returned>Always</Returned>
                                        </CallInfo>
                                    </xs:appinfo>
                                </xs:annotation>
                            </xs:element>
                        </xs:sequence>
                    </xs:extension>
                </xs:complexContent>
            </xs:complexType>
            <xs:complexType name="StartDownloadJobResponse">
                <xs:annotation>
                    <xs:documentation>
                        Type defining the root container of the <b>startDownloadJob</b> response. The response includes the <b>jobId</b> field and the standard output fields like <b>ack</b>, <b>timestamp</b>, <b>version</b>, and any errors/warnings that are generated by the request to start the job.
                    </xs:documentation>
                </xs:annotation>
                <xs:complexContent>
                    <xs:extension base="tns:BaseServiceResponse">
                        <xs:sequence>
                            <xs:element minOccurs="0" name="jobId" type="xs:string">
                                <xs:annotation>
                                    <xs:documentation>
                                        Unique ID that is assigned for a job by the Bulk Data Exchange API after a successful <b>startDownloadJob</ b> call. This value is passed into the File Transfer API's <b>downloadJob</b> call.
                                    </xs:documentation>
                                    <xs:appinfo>
                                        <CallInfo>
                                            <CallName>startDownloadJob</CallName>
                                            <Returned>Always</Returned>
                                        </CallInfo>
                                    </xs:appinfo>
                                </xs:annotation>
                            </xs:element>
                        </xs:sequence>
                    </xs:extension>
                </xs:complexContent>
            </xs:complexType>
            <xs:complexType name="CreateRecurringJobResponse">
                <xs:annotation>
                    <xs:documentation>
                        Type defining the root container of the <b>startDownloadJob</b> response. The response includes the <b>recurringjobId</b> field and the standard output fields like <b>ack</b>, <b>timestamp</b>, <b>version</b>, and any errors/warnings that are generated by the request to create a recurring job.
                    </xs:documentation>
                </xs:annotation>
                <xs:complexContent>
                    <xs:extension base="tns:BaseServiceResponse">
                        <xs:sequence>
                            <xs:element minOccurs="0" name="recurringJobId" type="xs:string">
                                <xs:annotation>
                                    <xs:documentation>
                                        Unique ID that is assigned for the recurring job by the Bulk Data Exchange API after a successful <b>createRecurringJob</ b> call. This value is passed into the request of other recurring job calls of the File Transfer API.
                                    </xs:documentation>
                                    <xs:appinfo>
                                        <CallInfo>
                                            <CallName>createRecurringJob</CallName>
                                            <Returned>Always</Returned>
                                        </CallInfo>
                                    </xs:appinfo>
                                </xs:annotation>
                            </xs:element>
                        </xs:sequence>
                    </xs:extension>
                </xs:complexContent>
            </xs:complexType>
            <xs:complexType name="DeleteRecurringJobResponse">
                <xs:annotation>
                    <xs:documentation>
                        Type defining the root container of the <b>deleteRecurringJob</b> response. The response includes the standard output fields like <b>ack</b>, <b>timestamp</b>, <b>version</b>, and any errors/warnings that are generated by the request to delete a recurring job. The <b>ack</b> values of 'Success' or 'Failure' will indicate whether or not the specified recurring job was successfully deleted.
                    </xs:documentation>
                </xs:annotation>
                <xs:complexContent>
                    <xs:extension base="tns:BaseServiceResponse">
                        <xs:sequence></xs:sequence>
                    </xs:extension>
                </xs:complexContent>
            </xs:complexType>
            <xs:complexType name="GetRecurringJobsResponse">
                <xs:annotation>
                    <xs:documentation>
                        Type defining the root container of the <b>getRecurringJobs</b> response. The response includes one or more <b>recurringJobDetail</b> containers, and each container consists of a unique identifier for the recurring job, the current status of the recurring job ('Active' or 'Suspended), the frequency of the recurring job (daily, weekly, monthly), and the download job type. The response also includes the standard output fields like <b>ack</b>, <b>timestamp</b>, <b>version</b>, and any errors/warnings that are generated by the request to retrieve recurring jobs.
                    </xs:documentation>
                </xs:annotation>
                <xs:complexContent>
                    <xs:extension base="tns:BaseServiceResponse">
                        <xs:sequence>
                            <xs:element maxOccurs="unbounded" minOccurs="0" name="recurringJobDetail" type="tns:RecurringJobDetail">
                                <xs:annotation>
                                    <xs:documentation>
                                        One or more <b>recurringJobDetail</b> containers are returned for each retrieved recurring job. The <b>recurringJobDetail</b> container consists of a unique identifier for the recurring job, the current status of the recurring job ('Active' or 'Suspended), the frequency of the recurring job (daily, weekly, monthly), and the download job type.
                                    </xs:documentation>
                                    <xs:appinfo>
                                        <CallInfo>
                                            <CallName>getRecurringJobs</CallName>
                                            <Returned>Always</Returned>
                                        </CallInfo>
                                    </xs:appinfo>
                                </xs:annotation>
                            </xs:element>
                        </xs:sequence>
                    </xs:extension>
                </xs:complexContent>
            </xs:complexType>
            <xs:complexType name="GetRecurringJobExecutionStatusResponse">
                <xs:annotation>
                    <xs:documentation>
                        Type defining the root container of the <b>getRecurringJobExecutionStatus</b> response. The response includes one <b>jobProfile</b> container, and each container consists of unique identifiers for the recurring job, as well as data that indicates the current status of the recurring job. The response also includes the standard output fields like <b>ack</b>, <b>timestamp</b>, <b>version</b>, and any errors/warnings that are generated by the request to retrieve a specific recurring job.
                    </xs:documentation>
                </xs:annotation>
                <xs:complexContent>
                    <xs:extension base="tns:BaseServiceResponse">
                        <xs:sequence>
                            <xs:element minOccurs="0" name="jobProfile" type="tns:JobProfile">
                                <xs:annotation>
                                    <xs:documentation>
                                        A <b>jobProfile</b> container is returned for a successfully retrieved recurring job. The <b>jobProfile</b> container consists of unique identifiers for the recurring job, as well as data that indicates the current status of the recurring job. <br><br> The job profile returns data about the state of the Bulk Data Exchange job, but does not return information about the status of the processing for any data file that is sent with the job request or returned with the job response.
                                    </xs:documentation>
                                    <xs:appinfo>
                                        <CallInfo>
                                            <CallName>getRecurringJobExecutionStatus</CallName>
                                            <Returned>Always</Returned>
                                        </CallInfo>
                                    </xs:appinfo>
                                </xs:annotation>
                            </xs:element>
                        </xs:sequence>
                    </xs:extension>
                </xs:complexContent>
            </xs:complexType>
            <xs:complexType name="GetRecurringJobExecutionHistoryResponse">
                <xs:annotation>
                    <xs:documentation>
                        Type defining the root container of the <b>getRecurringJobExecutionHistory</b> response. The response includes one or more <b>jobProfile</b> containers, and each container consists of unique identifiers for the recurring job, as well as data that indicates the current status of the recurring job. The response also includes the standard output fields like <b>ack</b>, <b>timestamp</b>, <b>version</b>, and any errors/warnings that are generated by the request to retrieve a specific recurring job.
                    </xs:documentation>
                </xs:annotation>
                <xs:complexContent>
                    <xs:extension base="tns:BaseServiceResponse">
                        <xs:sequence>
                            <xs:element maxOccurs="unbounded" minOccurs="0" name="jobProfile" type="tns:JobProfile">
                                <xs:annotation>
                                    <xs:documentation>
                                        A <b>jobProfile</b> container is returned for each successfully retrieved recurring job. The <b>jobProfile</b> container consists of unique identifiers for the recurring job, as well as data that indicates the current status of the recurring job. <br><br> The job profile returns data about the state of the Bulk Data Exchange job, but does not return information about the status of the processing for any data file that is sent with the job request or returned with the job response.
                                    </xs:documentation>
                                    <xs:appinfo>
                                        <CallInfo>
                                            <CallName>getRecurringJobExecutionHistory</CallName>
                                            <Returned>Always</Returned>
                                        </CallInfo>
                                    </xs:appinfo>
                                </xs:annotation>
                            </xs:element>
                        </xs:sequence>
                    </xs:extension>
                </xs:complexContent>
            </xs:complexType>
            <xs:complexType name="ActivateRecurringJobResponse">
                <xs:annotation>
                    <xs:documentation>
                        Type defining the root container of the <b>activateRecurringJob</b> response. The response includes the standard output fields like <b>ack</b>, <b>timestamp</b>, <b>version</b>, and any errors/warnings that are generated by the request to activate a recurring job that was previously suspended. The <b>ack</b> values of 'Success' or 'Failure' will indicate whether or not the specified recurring job was successfully activated.
                    </xs:documentation>
                </xs:annotation>
                <xs:complexContent>
                    <xs:extension base="tns:BaseServiceResponse">
                        <xs:sequence></xs:sequence>
                    </xs:extension>
                </xs:complexContent>
            </xs:complexType>
            <xs:complexType name="SuspendRecurringJobResponse">
                <xs:annotation>
                    <xs:documentation>
                        Type defining the root container of the <b>suspendRecurringJob</b> response. The response includes the standard output fields like <b>ack</b>, <b>timestamp</b>, <b>version</b>, and any errors/warnings that are generated by the request to suspend the next scheduled recurring job. The <b>ack</b> values of 'Success' or 'Failure' will indicate whether or not the next scheduled recurring job was successfully suspended.
                    </xs:documentation>
                </xs:annotation>
                <xs:complexContent>
                    <xs:extension base="tns:BaseServiceResponse">
                        <xs:sequence></xs:sequence>
                    </xs:extension>
                </xs:complexContent>
            </xs:complexType>
            <xs:complexType name="AbortRecurringJobExecutionResponse">
                <xs:annotation>
                    <xs:documentation>
                        Type defining the root container of the <b>abortRecurringJobExecution</b> response. The response includes the standard output fields like <b>ack</b>, <b>timestamp</b>, <b>version</b>, and any errors/warnings that are generated by the request to abort the next scheduled recurring job. The <b>ack</b> values of 'Success' or 'Failure' will indicate whether or not the next scheduled recurring job was successfully aborted. <br><br> To remove a recurring job completely, use <b>deleteRecurringJob</b>. Use <b>getRecurringJobExecutionStatus</b> to see the last completed instance of a recurring job.
                    </xs:documentation>
                </xs:annotation>
                <xs:complexContent>
                    <xs:extension base="tns:BaseServiceResponse">
                        <xs:sequence></xs:sequence>
                    </xs:extension>
                </xs:complexContent>
            </xs:complexType>
            <xs:complexType name="RecurringJobDetail">
                <xs:annotation>
                    <xs:documentation>
                        Type defining the <b>recurringJobDetail</b> container that is returned for each recurring job defined for the seller. The <b>recurringJobDetail</b> container consists of a unique identifier for the recurring job, the current status of the recurring job ('Active' or 'Suspended), the frequency of the recurring job (daily, weekly, monthly), and the download job type.
                    </xs:documentation>
                </xs:annotation>
                <xs:sequence>
                    <xs:element name="recurringJobId" type="xs:string">
                        <xs:annotation>
                            <xs:documentation>
                                The unique identifier of a recurring job that is assigned by the Bulk Data Exchange API after a successful <b>createRecurringJob</ b> call. This value is passed into the request of other recurring job calls of the File Transfer API.
                            </xs:documentation>
                            <xs:appinfo>
                                <CallInfo>
                                    <CallName>getRecurringJobs</CallName>
                                    <Returned>Always</Returned>
                                </CallInfo>
                            </xs:appinfo>
                        </xs:annotation>
                    </xs:element>
                    <xs:element name="creationTime" type="xs:dateTime">
                        <xs:annotation>
                            <xs:documentation>
                                This timestamp indicates the date and time that the Bulk Data Exchange job was created.
                            </xs:documentation>
                            <xs:appinfo>
                                <CallInfo>
                                    <CallName>getRecurringJobs</CallName>
                                    <Returned>Always</Returned>
                                </CallInfo>
                            </xs:appinfo>
                        </xs:annotation>
                    </xs:element>
                    <xs:element minOccurs="0" name="frequencyInMinutes" type="xs:int">
                        <xs:annotation>
                            <xs:documentation>
                                This field is only returned if an intraday frequency was set up for the recurring job. If an intraday frequency is set up for a recurring job, job instances will be executed according to the frequency (in minutes) set in the <b>frequencyInMinutes</b> field.
                            </xs:documentation>
                            <xs:appinfo>
                                <CallInfo>
                                    <CallName>getRecurringJobs</CallName>
                                    <Returned>Conditionally</Returned>
                                </CallInfo>
                            </xs:appinfo>
                        </xs:annotation>
                    </xs:element>
                    <xs:element name="downloadJobType" type="xs:token">
                        <xs:annotation>
                            <xs:documentation>
                                Specifies the report you want to download. Each Bulk Data Exchange job can only have one job type per job. For instance, if you are downloading a <b>SoldReport</b>, it will only have predefined <b>SoldReport</b> data within the file. <br><br> <dl> <lh><b>Applicable values</b>:<br></lh> <dt><b>ActiveInventoryReport</b></dt> <dd>A report that contains all of the active listings for a specific seller ID. The eBay servers read the credential information passed in by the seller's application to determine which seller's data to retrieve. </dd> <dt><b>FeeSettlementReport</b></dt> <dd>A report that contains all of the fees that you have incurred as invoices are generated by the eBay servers. This report gives large merchants the ability to look at their fees for many listings in one file. </dd> <dt><b>SoldReport</b></dt> <dd>Lists all items that have been sold by this seller (sold items that were submitted to the Large Merchant Service by the seller's application). <br><br> When an item is sold, the eBay application creates an 'order' for the seller. If only one item is sold, there is one order ID and one line item ID associated with the sale. However, if multiple items are sold as part of the same transaction, there is one order ID for the sale, and multiple line item IDs - one line item ID for each item sold. <br><br> Therefore, <b>SoldReport</b> returns the order IDs and line item IDs for every order associated with the seller who is making the request. Sellers use this information to make inventory updates and start order fulfillment. <br><br> When orders have been fulfilled, the seller will probably want to remove them from the list of all orders that comes back every time they receive a <b>SoldReport</b>. To do this, they can acknowledge each order that has been fulfilled (using order ID or line item ID) by uploading a list of the fulfilled order information using an <b>OrderAck</b> request. <br><br> After you upload a data file with an <b>OrderAck</b> request, the orders (or line items within an order) will no longer appear in <b>SoldReport</b>. After you send the first <b>OrderAck</b> call, future <b>SoldReport</b> responses will only contain unacknowledged orders and line items. </dd> </dl>
                            </xs:documentation>
                            <xs:appinfo>
                                <ListBasedOn/>
                                <CallInfo>
                                    <CallName>getRecurringJobs</CallName>
                                    <Returned>Always</Returned>
                                </CallInfo>
                            </xs:appinfo>
                        </xs:annotation>
                    </xs:element>
                    <xs:element name="jobStatus" type="tns:RecurringJobStatus">
                        <xs:annotation>
                            <xs:documentation>
                                The current state of a recurring Bulk Data Exchange job.
                            </xs:documentation>
                            <xs:appinfo>
                                <CallInfo>
                                    <CallName>getRecurringJobs</CallName>
                                    <Returned>Always</Returned>
                                </CallInfo>
                            </xs:appinfo>
                        </xs:annotation>
                    </xs:element>
                    <xs:element minOccurs="0" name="monthlyRecurrence" type="tns:MonthlyRecurrence">
                        <xs:annotation>
                            <xs:documentation>
                                This container is only returned if a monthly recurrence was set up for the recurring job. If a recurring job is set up to run on a monthly basis, the day of month and the time of day is returned under the <b>monthlyRecurrence</b> container.
                            </xs:documentation>
                            <xs:appinfo>
                                <CallInfo>
                                    <CallName>getRecurringJobs</CallName>
                                    <Returned>Conditionally</Returned>
                                </CallInfo>
                            </xs:appinfo>
                        </xs:annotation>
                    </xs:element>
                    <xs:element minOccurs="0" name="weeklyRecurrence" type="tns:WeeklyRecurrence">
                        <xs:annotation>
                            <xs:documentation>
                                This container is only returned if a weekly recurrence was set up for the recurring job. If a recurring job is set up to run on a weekly basis, the day of week and the time of day is returned under the <b>weeklyRecurrence</b> container.
                            </xs:documentation>
                            <xs:appinfo>
                                <CallInfo>
                                    <CallName>getRecurringJobs</CallName>
                                    <Returned>Conditionally</Returned>
                                </CallInfo>
                            </xs:appinfo>
                        </xs:annotation>
                    </xs:element>
                    <xs:element minOccurs="0" name="dailyRecurrence" type="tns:DailyRecurrence">
                        <xs:annotation>
                            <xs:documentation>
                                This container is only returned if a daily recurrence was set up for the recurring job. If a recurring job is set up to run on a daily basis, the time of day is returned under the <b>dailyRecurrence</b> container.
                            </xs:documentation>
                            <xs:appinfo>
                                <CallInfo>
                                    <CallName>getRecurringJobs</CallName>
                                    <Returned>Conditionally</Returned>
                                </CallInfo>
                            </xs:appinfo>
                        </xs:annotation>
                    </xs:element>
                </xs:sequence>
            </xs:complexType>
            <xs:simpleType name="FileType">
                <xs:annotation>
                    <xs:documentation>
                        Simple type defining the file formats that can be specified in the <b>createUploadJob</b> request. Currently, XML is the only supported file format.
                    </xs:documentation>
                </xs:annotation>
                <xs:restriction base="xs:string">
                    <xs:enumeration value="XML">
                        <xs:annotation>
                            <xs:documentation>
                                This value indicates that XML will be used to upload and download files.
                            </xs:documentation>
                        </xs:annotation>
                    </xs:enumeration>
                </xs:restriction>
            </xs:simpleType>
            <xs:complexType name="JobProfile">
                <xs:annotation>
                    <xs:documentation>
                        Type defining the <b>jobProfile</b> container that is returned in Bulk Data Exchange API's "get" calls. The <b>jobProfile</b> container consists of unique identifiers for a job, as well as data that indicates the current status of the job. <br><br> The job profile returns data about the state of the Bulk Data Exchange job, but does not return information about the status of the processing for any data file that is sent with the job request or returned with the job response.
                    </xs:documentation>
                </xs:annotation>
                <xs:sequence>
                    <xs:element name="jobId" type="xs:string">
                        <xs:annotation>
                            <xs:documentation>
                                Unique ID that is assigned for a job by the Bulk Data Exchange API after a successful <b>startDownloadJob</ b> call. This value is always returned with the <b>jobProfile</b> container.
                            </xs:documentation>
                            <xs:appinfo>
                                <CallInfo>
                                    <CallName>getJobs</CallName>
                                    <CallName>getJobStatus</CallName>
                                    <CallName>getRecurringJobExecutionStatus</CallName>
                                    <CallName>getRecurringJobExecutionHistory</CallName>
                                    <Returned>Always</Returned>
                                </CallInfo>
                            </xs:appinfo>
                        </xs:annotation>
                    </xs:element>
                    <xs:element name="jobType" type="xs:token">
                        <xs:annotation>
                            <xs:documentation>
                                Each of the Bulk Data Exchange job types corresponds to a Merchant Data request or response with the same name. The requests or responses are included within a data file that will be uploaded or downloaded after the job is created. For instance, if you create an <b>AddFixedPriceItem</b> job, then the file you are going to upload must contain <b>AddFixedPriceItem</b> requests - one request for each item in your data file. <br><br> Each Bulk Data Exchange job can only have one job type per job. For example, if you are uploading a data file, it can not have both <b>AddFixedPriceItem</b> requests and <b>ReviseFixedPriceItem</b> requests within the same data file. <br><br> The following value definitions describe the request or response associated with each job type. <br><br> For more information about creating and uploading Merchant Data files, see the Large Merchant Services User Guide. <br><br> <dl> <dt><strong>Applicable values:</strong></dt> <dt>ActiveInventoryReport</strong></dt> <dd> Download job for a report that contains all of the active listings for a specific seller ID. The eBay servers read the credential information passed in by the seller's application to determine which seller's data to retrieve. </dd> <dt><strong>AddFixedPriceItem</strong></dt> <dd> Upload job for requests to add fixed-price items and lists it on a specified eBay site. </dd> <dt><strong>AddItem</strong></dt> <dd> Upload job for requests to Defines a single new item and lists it on a specified eBay site. </dd> <dt><strong>EndFixedPriceItem</strong></dt> <dd> Upload job for requests to end specified fixed-price item listings before the date and time at which they would normally end (per the listing duration). </dd> <dt><strong>EndItem</strong></dt> <dd> Upload job for requests to end specified item listings before the date and time at which they would normally end (per the listing duration). </dd> <dt><strong>FeeSettlementReport</strong></dt> <dd> Download job for a report that contains all of the fees the seller has incurred as invoices are generated by the eBay servers. This report gives large merchants the ability to look at their fees for many listings in one file. </dd> <dt><strong>OrderAck</strong></dt> <dd> Upload job for requests that acknowledge orders have been received. Use the <b>OrderAck</b> request to acknowledge each line item in a <b>SoldReport</b> by order ID or line item ID. <br><br> After you send the first <b>OrderAck</b> call, future <b>SoldReports</b> will only contain unacknowledged orders or line items. </dd> <dt><strong>RelistFixedPriceItem</strong></dt> <dd> Upload job for requests to re-list fixed-price (single or multi-item) listings that ended without buyers. A listing may be re-listed with the same item properties as the original or the seller may change a number of the item's defining properties at re- listing time. The new listing will have a different item ID than the original one. </dd> <dt><strong>RelistItem</strong></dt> <dd> Upload job for requests to re-list listings that ended without winning bidders or buyers. Enables a seller to take a single item (or a single multi-item listing) and re-list it on a specified eBay site. </dd> <dt><strong>ReviseFixedPriceItem</strong></dt> <dd> Upload job for requests to change the properties of a currently active listing. <br><br> If the listing contains multiple items, you can revise most of the fields in the listing (except Title, currency, product ID, photo display type, variation details, duration, format, or eBay Giving Works charity), even after one of the items in the listing has been purchased. To revise multiple listings, include a ReviseFixedPriceItemRequest once for each item or listing in your data file, with new information for each item or listing. </dd> <dt><strong>ReviseInventoryStatus</strong></dt> <dd> Upload job for requests to change the price and quantity of a currently active fixed-price listing. Inputs are the item IDs or SKUs of the listings being revised, and price and quantity that are being changed for each revision. <br><br> You can use SKU as input only for fixed-price listings that are managed by SKU (i.e., <b>InventoryTrackingMethod</b> is set to SKU). <b>ItemID</b> can be used in either case. </dd> <dt><strong>ReviseItem</strong></dt> <dd> Upload job for requests to change the properties of active listings. </dd> <dt><strong>SetShipmentTrackingInfo</strong></dt> <dd> Upload job for requests to specify the shipment tracking information associated with one package of an order. </dd> <dt><strong>SoldReport</strong></dt> <dd> Download job for a report that lists all items that have been sold by this seller (sold items that were submitted to the Large Merchant Service by the seller's application). <br><br> When an item is sold, the eBay application creates an 'order' for the seller. If only one item is sold, there is one order ID and one line item ID associated with the sale. However, if multiple items are sold as part of the same transaction, there is one order ID for the sale, and multiple line item IDs - one line item ID for each item sold. <br><br> Therefore, the Sold Report returns the order IDs and line item IDs for every order associated with the seller who is making the request. Sellers use this information to make inventory updates and start order fulfillment. <br><br> When orders have been fulfilled, the seller will probably want to remove them from the list of all orders that comes back every time they receive a SoldReport. To do this, they can acknowledge each order that has been fulfulled (using order ID or line item ID) by uploading a list of the fulfulled order information using an <b class="con">OrderAck</b> request. <br><br> After you upload a data file with an <b class="con">OrderAck</b> request, the orders (or line items within an order) will no longer appear in the <b> SoldReport</b>. (After you send the first <b> OrderAck</b> call, future <b class="con">SoldReports</b> that you request will only contain unacknowledged orders and line items.) </dd> <dt><strong>UploadSiteHostedPictures</strong></dt> <dd> Upload job for requests to upload pictures to EPS (eBay Picture Services). Each request contains a URL in the <b> ExternalPictureURL</b> field (the location of the picture on an external web server). Unlike what the call name implies, you can only upload one picture per request. </dd> <dt><strong>VerifyAddFixedPriceItem</strong></dt> <dd> Upload job for requests to test the definition of new fixed-price items by submitting them to eBay without creating a listing. </dd> <dt><strong>VerifyAddItem</strong></dt> <dd> Upload job for requests to test the definition of new items and submit the definition to eBay without creating a listing. </dd> </dl> <br><br> Recurring jobs can be established for download job types only. For <strong>getRecurringJobExecutionHistory</strong> and <strong>getRecurringJobExecutionStatus</strong>, only the following values apply: <br><br> <ul> <li>ActiveInventoryReport</li> <li>FeeSettlementReport</li> <li>SoldReport</li> </ul>
                            </xs:documentation>
                            <xs:appinfo>
                                <ListBasedOn/>
                                <CallInfo>
                                    <CallName>getJobs</CallName>
                                    <CallName>getJobStatus</CallName>
                                    <CallName>getRecurringJobExecutionStatus</CallName>
                                    <CallName>getRecurringJobExecutionHistory</CallName>
                                    <Returned>Always</Returned>
                                </CallInfo>
                            </xs:appinfo>
                        </xs:annotation>
                    </xs:element>
                    <xs:element name="jobStatus" type="tns:JobStatus">
                        <xs:annotation>
                            <xs:documentation>
                                The current state of a Bulk Data Exchange job. This value is always returned with the <b>jobProfile</b> container.
                            </xs:documentation>
                            <xs:appinfo>
                                <CallInfo>
                                    <CallName>getJobs</CallName>
                                    <CallName>getJobStatus</CallName>
                                    <CallName>getRecurringJobExecutionStatus</CallName>
                                    <CallName>getRecurringJobExecutionHistory</CallName>
                                    <Returned>Always</Returned>
                                </CallInfo>
                            </xs:appinfo>
                        </xs:annotation>
                    </xs:element>
                    <xs:element name="creationTime" type="xs:dateTime">
                        <xs:annotation>
                            <xs:documentation>
                                This timestamp indicates the date and time that the Bulk Data Exchange job was created. This value is always returned with the <b>jobProfile</b> container.
                            </xs:documentation>
                            <xs:appinfo>
                                <CallInfo>
                                    <CallName>getJobs</CallName>
                                    <CallName>getJobStatus</CallName>
                                    <CallName>getRecurringJobExecutionStatus</CallName>
                                    <CallName>getRecurringJobExecutionHistory</CallName>
                                    <Returned>Always</Returned>
                                </CallInfo>
                            </xs:appinfo>
                        </xs:annotation>
                    </xs:element>
                    <xs:element minOccurs="0" name="completionTime" type="xs:dateTime">
                        <xs:annotation>
                            <xs:documentation>
                                This timestamp indicates the date and time that the Bulk Data Exchange job was completed. Compare this timestamp against <strong>creationTime<strong> to determine the average processing time for your jobs. If processing of the job has not completed, this field will not be returned. The user will have to look at the <strong>percentComplete</strong> value to determine the current status of the running job.
                            </xs:documentation>
                            <xs:appinfo>
                                <CallInfo>
                                    <CallName>getJobs</CallName>
                                    <CallName>getJobStatus</CallName>
                                    <CallName>getRecurringJobExecutionStatus</CallName>
                                    <CallName>getRecurringJobExecutionHistory</CallName>
                                    <Returned>Conditionally</Returned>
                                </CallInfo>
                            </xs:appinfo>
                        </xs:annotation>
                    </xs:element>
                    <xs:element minOccurs="0" name="errorCount" type="xs:int">
                        <xs:annotation>
                            <xs:documentation>
                                The number of non-fatal (informational) errors that occurred during file processing (uploads or reports) after a <strong>startUploadJobRequest</strong> or <strong>startDownloadJobRequest</strong> call.
                            </xs:documentation>
                            <xs:appinfo>
                                <CallInfo>
                                    <CallName>getJobs</CallName>
                                    <CallName>getJobStatus</CallName>
                                    <CallName>getRecurringJobExecutionStatus</CallName>
                                    <CallName>getRecurringJobExecutionHistory</CallName>
                                    <Returned>Conditionally</Returned>
                                </CallInfo>
                            </xs:appinfo>
                        </xs:annotation>
                    </xs:element>
                    <xs:element minOccurs="0" name="percentComplete" type="xs:double">
                        <xs:annotation>
                            <xs:documentation>
                                The percentage of your file that has been processed after <strong>startUploadJobRequest</strong> or <strong>startDownloadJobRequest</strong> call. This value is always returned with the <b>jobProfile</b> container whether the job is still in progress or complete. If the job is complete, the value of this field will be '100.0'.
                            </xs:documentation>
                            <xs:appinfo>
                                <CallInfo>
                                    <CallName>getJobs</CallName>
                                    <CallName>getJobStatus</CallName>
                                    <CallName>getRecurringJobExecutionStatus</CallName>
                                    <CallName>getRecurringJobExecutionHistory</CallName>
                                    <Returned>Always</Returned>
                                </CallInfo>
                            </xs:appinfo>
                        </xs:annotation>
                    </xs:element>
                    <xs:element minOccurs="0" name="fileReferenceId" type="xs:string">
                        <xs:annotation>
                            <xs:documentation>
                                A unique ID assigned to a file by the Bulk Data Exchange API. This value will be passed into the <b>fileReferenceId</b> field in the File Transfer API's <b>uploadFile</b> call. <br><br> If a job has not completed processing, only the <b>inputFileReferenceId</b> value (from the <b>createUploadJob</b> response) will be returned. Once the upload job has finished processing, a new <b>fileReferenceId</b> is assigned by the Bulk Data Exchange API and returned by the job status calls.
                            </xs:documentation>
                            <xs:appinfo>
                                <CallInfo>
                                    <CallName>getJobs</CallName>
                                    <CallName>getJobStatus</CallName>
                                    <CallName>getRecurringJobExecutionStatus</CallName>
                                    <CallName>getRecurringJobExecutionHistory</CallName>
                                    <Returned>Conditionally</Returned>
                                </CallInfo>
                            </xs:appinfo>
                        </xs:annotation>
                    </xs:element>
                    <xs:element minOccurs="0" name="inputFileReferenceId" type="xs:string">
                        <xs:annotation>
                            <xs:documentation>
                                A unique ID that references the input data file for a job that is created via <b>createUploadJob</b>. This field preserves the original <b>fileReferenceId</b> value for an upload job. Once the data file has been uploaded and the upload job has finished processing, a new <b>fileReferenceId</b> value is assigned by the Bulk Data Exchange API for downloading the corresponding responses. This value is always returned with the <b>jobProfile</b> container.
                            </xs:documentation>
                            <xs:appinfo>
                                <CallInfo>
                                    <CallName>getJobs</CallName>
                                    <CallName>getJobStatus</CallName>
                                    <Returned>Always</Returned>
                                </CallInfo>
                            </xs:appinfo>
                        </xs:annotation>
                    </xs:element>
                    <xs:element minOccurs="0" name="startTime" type="xs:dateTime">
                        <xs:annotation>
                            <xs:documentation>
                                The <b>startTime</b> and <b>endTime</b> date range filters are used to restrict jobs retrieved in the response to those executed within the specified date range.
                            </xs:documentation>
                            <xs:appinfo>
                                <CallInfo>
                                    <NoCalls/>
                                </CallInfo>
                            </xs:appinfo>
                        </xs:annotation>
                    </xs:element>
                </xs:sequence>
            </xs:complexType>
            <xs:simpleType name="AckValue">
                <xs:annotation>
                    <xs:documentation>
                        Indicates whether the error is a severe error (causing the request to fail) or an informational error (a warning) that should be communicated to the user.
                    </xs:documentation>
                    <xs:appinfo>
                        <typeLibrarySource library="MarketPlaceServiceCommonTypeLibrary" namespace="http://www.ebay.com/marketplace/services"/>
                    </xs:appinfo>
                </xs:annotation>
                <xs:restriction base="xs:string">
                    <xs:enumeration value="Success">
                        <xs:annotation>
                            <xs:documentation>
                                The request was processed successfully, but something occurred that may affect your application or the user.
                            </xs:documentation>
                        </xs:annotation>
                    </xs:enumeration>
                    <xs:enumeration value="Failure">
                        <xs:annotation>
                            <xs:documentation>
                                The request that triggered the error was not processed successfully. When a serious application-level error occurs, the error is returned instead of the business data.
                            </xs:documentation>
                        </xs:annotation>
                    </xs:enumeration>
                    <xs:enumeration value="Warning">
                        <xs:annotation>
                            <xs:documentation>
                                The request that triggered the error was processed successfully but with some warnings.
                            </xs:documentation>
                        </xs:annotation>
                    </xs:enumeration>
                    <xs:enumeration value="PartialFailure">
                        <xs:annotation>
                            <xs:documentation>Reserved for future use.</xs:documentation>
                        </xs:annotation>
                    </xs:enumeration>
                </xs:restriction>
            </xs:simpleType>
            <xs:complexType name="ErrorMessage">
                <xs:annotation>
                    <xs:documentation>
                        ErrorMessage to indicate any Error/Warning occurred as part of service call. Any run time error will not be reported here, but will be reported aspart of soap fault.
                    </xs:documentation>
                    <xs:appinfo>
                        <typeLibrarySource library="SOACommonTypeLibrary" namespace="http://www.ebay.com/marketplace/services"/>
                    </xs:appinfo>
                </xs:annotation>
                <xs:sequence>
                    <xs:element maxOccurs="unbounded" minOccurs="0" name="error" nillable="true" type="tns:ErrorData">
                        <xs:annotation>
                            <xs:documentation>Details about a single error.</xs:documentation>
                            <xs:appinfo>
                                <CallInfo>
                                    <AllCalls/>
                                    <Returned>Conditionally</Returned>
                                </CallInfo>
                            </xs:appinfo>
                        </xs:annotation>
                    </xs:element>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="ErrorData">
                <xs:annotation>
                    <xs:documentation>This represents error details.</xs:documentation>
                    <xs:appinfo>
                        <typeLibrarySource library="SOACommonTypeLibrary" namespace="http://www.ebay.com/marketplace/services"/>
                    </xs:appinfo>
                </xs:annotation>
                <xs:sequence>
                    <xs:element name="errorId" type="xs:long">
                        <xs:annotation>
                            <xs:documentation>
                                A unique code that identifies the particular error condition that occurred. Your application can use error codes as identifiers in your customized error-handling algorithms.
                            </xs:documentation>
                            <xs:appinfo>
                                <CallInfo>
                                    <AllCalls/>
                                    <Returned>Conditionally</Returned>
                                </CallInfo>
                            </xs:appinfo>
                        </xs:annotation>
                    </xs:element>
                    <xs:element name="domain" type="xs:string">
                        <xs:annotation>
                            <xs:documentation>
                                Name of the domain upon which the error occurred. <dl> <lh>Domains include:</lh> <dt> Marketplace </dt> <dd> A business or validation error occurred for the Bulk Data Exchange service. </dd> <dt> SOA </dt> <dd> An exception occurred in the Service Oriented Architecture (SOA) framework. </dd> </dl>
                            </xs:documentation>
                            <xs:appinfo>
                                <CallInfo>
                                    <AllCalls/>
                                    <Returned>Conditionally</Returned>
                                </CallInfo>
                            </xs:appinfo>
                        </xs:annotation>
                    </xs:element>
                    <xs:element name="severity" type="tns:ErrorSeverity">
                        <xs:annotation>
                            <xs:documentation>
                                Indicates whether the error caused the request to fail (Error) or not (Warning). <br><br> If the request fails and the source of the problem is within the application (such as a missing required element), please change the application before you retry the request. If the problem is due to end-user input data, please alert the end-user to the problem and provide the means for them to correct the data. Once the problem in the application or data is resolved, you can attempt to re- send the request to eBay. <br><br> If the source of the problem is on eBay's side, you can retry the request as-is a reasonable number of times (eBay recommends twice). If the error persists, contact Developer Technical Support. Once the problem has been resolved, the request may be resent in its original form. <br><br> When a warning occurs, the error is returned in addition to the business data. In this case, you do not need to retry the request (as the original request was successful). However, depending on the cause or nature of the warning, you might need to contact either the end user or eBay to effect a long term solution to the problem to prevent it from reoccurring in the future.
                            </xs:documentation>
                            <xs:appinfo>
                                <CallInfo>
                                    <AllCalls/>
                                    <Returned>Conditionally</Returned>
                                </CallInfo>
                            </xs:appinfo>
                        </xs:annotation>
                    </xs:element>
                    <xs:element name="category" type="tns:ErrorCategory">
                        <xs:annotation>
                            <xs:documentation>
                                There are three categories of errors: request errors, application errors, and system errors.
                            </xs:documentation>
                            <xs:appinfo>
                                <CallInfo>
                                    <AllCalls/>
                                    <Returned>Conditionally</Returned>
                                </CallInfo>
                            </xs:appinfo>
                        </xs:annotation>
                    </xs:element>
                    <xs:element name="message" type="xs:string">
                        <xs:annotation>
                            <xs:documentation>
                                A detailed description of the condition that resulted in the error.
                            </xs:documentation>
                            <xs:appinfo>
                                <CallInfo>
                                    <AllCalls/>
                                    <Returned>Conditionally</Returned>
                                </CallInfo>
                            </xs:appinfo>
                        </xs:annotation>
                    </xs:element>
                    <xs:element minOccurs="0" name="subdomain" type="xs:string">
                        <xs:annotation>
                            <xs:documentation>
                                Name of the subdomain upon which the error occurred. <dl> <lh><b>Subdomains include</b>:</lh> <dt> <b>BulkDataExchangeService</b> </dt> <dd> The error is specific to the Bulk Data Exchange API. </dd> <dt> <b>MarketplaceCommon</b> </dt> <dd> The error is common to all Marketplace API. </dd> </dl>
                            </xs:documentation>
                            <xs:appinfo>
                                <CallInfo>
                                    <AllCalls/>
                                    <Returned>Conditionally</Returned>
                                </CallInfo>
                            </xs:appinfo>
                        </xs:annotation>
                    </xs:element>
                    <xs:element minOccurs="0" name="exceptionId" type="xs:token">
                        <xs:annotation>
                            <xs:documentation>
                                Unique identifier for an exception associated with an error.
                            </xs:documentation>
                            <xs:appinfo>
                                <ListBasedOn/>
                                <CallInfo>
                                    <AllCalls/>
                                    <Returned>Conditionally</Returned>
                                </CallInfo>
                            </xs:appinfo>
                        </xs:annotation>
                    </xs:element>
                    <xs:element maxOccurs="unbounded" minOccurs="0" name="parameter" nillable="true" type="tns:ErrorParameter">
                        <xs:annotation>
                            <xs:documentation>
                                Some warning and error messages return one or more variables that contain contextual information about the error. This is often the field or value that triggered the error.
                            </xs:documentation>
                            <xs:appinfo>
                                <CallInfo>
                                    <AllCalls/>
                                    <Returned>Conditionally</Returned>
                                </CallInfo>
                            </xs:appinfo>
                        </xs:annotation>
                    </xs:element>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="ErrorParameter">
                <xs:annotation>
                    <xs:documentation>Contextual information associated with an error.</xs:documentation>
                    <xs:appinfo>
                        <typeLibrarySource library="SOACommonTypeLibrary" namespace="http://www.ebay.com/marketplace/services"/>
                    </xs:appinfo>
                </xs:annotation>
                <xs:simpleContent>
                    <xs:extension base="xs:string">
                        <xs:attribute name="name" type="xs:string">
                            <xs:annotation>
                                <xs:documentation>
                                    The name of the parameter in the get of parameter types returned within the error type.
                                </xs:documentation>
                                <xs:appinfo>
                                    <CallInfo>
                                        <AllCalls/>
                                        <Returned>Conditionally</Returned>
                                    </CallInfo>
                                </xs:appinfo>
                            </xs:annotation>
                        </xs:attribute>
                    </xs:extension>
                </xs:simpleContent>
            </xs:complexType>
            <xs:simpleType name="ErrorSeverity">
                <xs:annotation>
                    <xs:documentation>
                        Indicates whether the error is a severe error (causing the request to fail) or an informational error (a warning) that should be communicated to the user.
                    </xs:documentation>
                    <xs:appinfo>
                        <typeLibrarySource library="SOACommonTypeLibrary" namespace="http://www.ebay.com/marketplace/services"/>
                    </xs:appinfo>
                </xs:annotation>
                <xs:restriction base="xs:string">
                    <xs:enumeration value="Error">
                        <xs:annotation>
                            <xs:documentation>
                                The request that triggered the error was not processed successfully. When a serious application-level error occurs, the error is returned instead of the business data.
                            </xs:documentation>
                        </xs:annotation>
                    </xs:enumeration>
                    <xs:enumeration value="Warning">
                        <xs:annotation>
                            <xs:documentation>
                                The request was processed successfully, but something occurred that may affect your application or the user. For example, eBay may have changed a value the user sent in. In this case, eBay returns a normal, successful response and also returns the warning.
                            </xs:documentation>
                        </xs:annotation>
                    </xs:enumeration>
                </xs:restriction>
            </xs:simpleType>
            <xs:simpleType name="ErrorCategory">
                <xs:annotation>
                    <xs:documentation>
                        There are three categories of error: request errors, application errors, and system errors. Request and application errors are caused primarily by invalid data passed in the request. System errors are caused primarily by application failures and cannot be corrected by changing request values.
                    </xs:documentation>
                    <xs:appinfo>
                        <typeLibrarySource library="SOACommonTypeLibrary" namespace="http://www.ebay.com/marketplace/services"/>
                    </xs:appinfo>
                </xs:annotation>
                <xs:restriction base="xs:string">
                    <xs:enumeration value="System">
                        <xs:annotation>
                            <xs:documentation>
                                Indicates that an error has occurred on the eBay system side, such as a database or server down. An application can retry the request as-is a reasonable number of times (eBay recommends twice). If the error persists, contact Developer Technical Support. Once the problem has been resolved, the request may be resent in its original form.
                            </xs:documentation>
                        </xs:annotation>
                    </xs:enumeration>
                    <xs:enumeration value="Application">
                        <xs:annotation>
                            <xs:documentation>
                                An error occurred due to a problem with the request, such as missing or invalid fields. The problem must be corrected before the request can be made again. If the problem is due to something in the application (such as a missing required field), the application must be changed. Once the problem in the application or data is resolved, resend the corrected request to eBay.
                            </xs:documentation>
                        </xs:annotation>
                    </xs:enumeration>
                    <xs:enumeration value="Request">
                        <xs:annotation>
                            <xs:documentation>
                                An error occurred due to a problem with the request, such as invalid or missing data. The problem must be corrected before the request can be made again. If the problem is a result of end-user data, the application must alert the end-user to the problem and provide the means for the end-user to correct the data. Once the problem in the data is resolved, resend the request to eBay with the corrected data.
                            </xs:documentation>
                        </xs:annotation>
                    </xs:enumeration>
                </xs:restriction>
            </xs:simpleType>
            <xs:simpleType name="JobStatus">
                <xs:annotation>
                    <xs:documentation>
                        Enumerated type defining the possible states of a Bulk Data Exchange job.
                    </xs:documentation>
                </xs:annotation>
                <xs:restriction base="xs:string">
                    <xs:enumeration value="Created">
                        <xs:annotation>
                            <xs:documentation>
                                The job ID and file reference ID have been created as a result of the <b>createUploadJobRequest</b> or the <b>startDownloadJobRequest</b>.
                            </xs:documentation>
                        </xs:annotation>
                    </xs:enumeration>
                    <xs:enumeration value="Scheduled">
                        <xs:annotation>
                            <xs:documentation>
                                The job has been internally scheduled for processing by the Bulk Data Exchange API.
                            </xs:documentation>
                        </xs:annotation>
                    </xs:enumeration>
                    <xs:enumeration value="InProcess">
                        <xs:annotation>
                            <xs:documentation>
                                Processing on the data file or the report has begun.
                            </xs:documentation>
                        </xs:annotation>
                    </xs:enumeration>
                    <xs:enumeration value="Completed">
                        <xs:annotation>
                            <xs:documentation>
                                Processing on the data file or the report has finished.
                            </xs:documentation>
                        </xs:annotation>
                    </xs:enumeration>
                    <xs:enumeration value="Aborted">
                        <xs:annotation>
                            <xs:documentation>
                                The Bulk Data Exchange has been aborted due to the <b>abortJob</b> call.
                            </xs:documentation>
                        </xs:annotation>
                    </xs:enumeration>
                    <xs:enumeration value="Failed">
                        <xs:annotation>
                            <xs:documentation>
                                The Bulk Data Exchange job has not completed successfully, due to incorrect data format, request errors, or Bulk Data Exchange API errors.
                            </xs:documentation>
                        </xs:annotation>
                    </xs:enumeration>
                </xs:restriction>
            </xs:simpleType>
            <xs:simpleType name="RecurringJobStatus">
                <xs:annotation>
                    <xs:documentation>
                        Enumerated type defining the possible states of a Bulk Data Exchange recurring job.
                    </xs:documentation>
                </xs:annotation>
                <xs:restriction base="xs:string">
                    <xs:enumeration value="Active">
                        <xs:annotation>
                            <xs:documentation>
                                This value indicates that the recurring job is active.
                            </xs:documentation>
                        </xs:annotation>
                    </xs:enumeration>
                    <xs:enumeration value="Suspended">
                        <xs:annotation>
                            <xs:documentation>
                                This value indicates that the recurring job is temporarily suspended. Use <b>activateRecurringJob</b> to restart a suspended recurring job.
                            </xs:documentation>
                        </xs:annotation>
                    </xs:enumeration>
                </xs:restriction>
            </xs:simpleType>
            <xs:complexType name="MonthlyRecurrence">
                <xs:annotation>
                    <xs:documentation>
                        Type defining the <b>monthlyRecurrence</b> container. This container can be used to create a recurring job that is executed on a monthly basis. If this container is used, the <b>weeklyRecurrence</b> and <b>dailyRecurrence</b> containers, and <b>frequencyInMinutes</b> field should not be used.
                    </xs:documentation>
                </xs:annotation>
                <xs:sequence>
                    <xs:element name="dayOfMonth" type="xs:token">
                        <xs:annotation>
                            <xs:documentation>
                                This value is used to specify which day of each month that the recurring job should be executed. Supported values are 'Day_1', 'Day_2', 'Day_3', and all the way up to 'Day_28'. 'Day_Last' is also a supported value and indicates that the recurring job should be executed on the last day of each month, whether that be the 28th (in February), the 29th (in February during a leap year), the 30th, or 31st. <br/><br/> 'Day_29', 'Day_30', and 'Day_31' are NOT supported values. This field is always required if the <b>monthlyRecurrence</b> container is used.
                            </xs:documentation>
                            <xs:appinfo>
                                <ListBasedOn/>
                                <CallInfo>
                                    <CallName>createRecurringJob</CallName>
                                    <RequiredInput>Conditionally</RequiredInput>
                                </CallInfo>
                                <CallInfo>
                                    <CallName>getRecurringJobs</CallName>
                                    <Returned>Conditionally</Returned>
                                </CallInfo>
                            </xs:appinfo>
                        </xs:annotation>
                    </xs:element>
                    <xs:element name="timeOfDay" type="xs:time">
                        <xs:annotation>
                            <xs:documentation>
                                This value is used to specify the time of day (on the day specified through the <b>dayOfMonth</b> field) that the job will execute. The 24-hour clock and GMT are used. 'HH:MM:SS' is the convention that is used, where 'HH' is hours, 'MM' is minutes, and 'SS' is seconds. A sample value is '05:00:00', which would mean that the recurring job would be executed at 5 AM GMT. <br/><br/> This field is always required if the <b>monthlyRecurrence</b> container is used.
                            </xs:documentation>
                            <xs:appinfo>
                                <CallInfo>
                                    <CallName>createRecurringJob</CallName>
                                    <RequiredInput>Conditionally</RequiredInput>
                                </CallInfo>
                                <CallInfo>
                                    <CallName>getRecurringJobs</CallName>
                                    <Returned>Conditionally</Returned>
                                </CallInfo>
                            </xs:appinfo>
                        </xs:annotation>
                    </xs:element>
                    <xs:any maxOccurs="unbounded" minOccurs="0" processContents="lax"/>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="WeeklyRecurrence">
                <xs:annotation>
                    <xs:documentation>
                        Type defining the <b>weeklyRecurrence</b> container. This container can be used to create a recurring job that is executed on a weekly basis. If this container is used, the <b>monthlyRecurrence</b> and <b>dailyRecurrence</b> containers, and <b>frequencyInMinutes</b> field should not be used.
                    </xs:documentation>
                </xs:annotation>
                <xs:sequence>
                    <xs:element name="dayOfWeek" type="xs:token">
                        <xs:annotation>
                            <xs:documentation>
                                This value is used to specify which day of the week that the recurring job should be executed. Supported values are 'Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', and 'Saturday'. <br/><br/> This field is always required if the <b>weeklyRecurrence</b> container is used.
                            </xs:documentation>
                            <xs:appinfo>
                                <ListBasedOn/>
                                <CallInfo>
                                    <CallName>createRecurringJob</CallName>
                                    <RequiredInput>Conditionally</RequiredInput>
                                </CallInfo>
                                <CallInfo>
                                    <CallName>getRecurringJobs</CallName>
                                    <Returned>Conditionally</Returned>
                                </CallInfo>
                            </xs:appinfo>
                        </xs:annotation>
                    </xs:element>
                    <xs:element name="timeOfDay" type="xs:time">
                        <xs:annotation>
                            <xs:documentation>
                                This value is used to specify the time of day (on the day specified through the <b>dayOfWeek</b> field) that the job will execute. The 24-hour clock and GMT are used. 'HH:MM:SS' is the convention that is used, where 'HH' is hours, 'MM' is minutes, and 'SS' is seconds. A sample value is '05:00:00', which would mean that the recurring job would be executed at 5 AM GMT. <br/><br/> This field is always required if the <b>weeklyRecurrence</b> container is used.
                            </xs:documentation>
                            <xs:appinfo>
                                <CallInfo>
                                    <CallName>createRecurringJob</CallName>
                                    <RequiredInput>Conditionally</RequiredInput>
                                </CallInfo>
                                <CallInfo>
                                    <CallName>getRecurringJobs</CallName>
                                    <Returned>Conditionally</Returned>
                                </CallInfo>
                            </xs:appinfo>
                        </xs:annotation>
                    </xs:element>
                    <xs:any maxOccurs="unbounded" minOccurs="0" processContents="lax"/>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="DailyRecurrence">
                <xs:annotation>
                    <xs:documentation>
                        Type defining the <b>dailyRecurrence</b> container. This container can be used to create a recurring job that is executed on a daily basis. If this container is used, the <b>monthlyRecurrence</b> and <b>weeklyRecurrence</b> containers, and <b>frequencyInMinutes</b> field should not be used.
                    </xs:documentation>
                </xs:annotation>
                <xs:sequence>
                    <xs:element name="timeOfDay" type="xs:time">
                        <xs:annotation>
                            <xs:documentation>
                                This value is used to specify the time of day that the job will execute on a daily basis. The 24-hour clock and GMT are used. 'HH:MM:SS' is the convention that is used, where 'HH' is hours, 'MM' is minutes, and 'SS' is seconds. A sample value is '05:00:00', which would mean that the recurring job would be executed at 5 AM GMT. <br/><br/> This field is always required if the <b>dailyRecurrence</b> container is used.
                            </xs:documentation>
                            <xs:appinfo>
                                <CallInfo>
                                    <CallName>createRecurringJob</CallName>
                                    <RequiredInput>Conditionally</RequiredInput>
                                </CallInfo>
                                <CallInfo>
                                    <CallName>getRecurringJobs</CallName>
                                    <Returned>Conditionally</Returned>
                                </CallInfo>
                            </xs:appinfo>
                        </xs:annotation>
                    </xs:element>
                    <xs:any maxOccurs="unbounded" minOccurs="0" processContents="lax"/>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="SoldReportFilter">
                <xs:annotation>
                    <xs:documentation>
                        Type defining the <b>soldReportFilter</b> container, which allows the user to control whether (and when) the buyers' shipping addresses are returned in Merchant Data's <b>SoldReport</b> response. <br/><br/> The <b>soldReportFilter</b> container is only applicable if the <b>downloadJobType</b> value is set to 'SoldReport'.
                    </xs:documentation>
                </xs:annotation>
                <xs:sequence>
                    <xs:element name="includeShippingAddress" type="tns:IncludeShippingAddressType">
                        <xs:annotation>
                            <xs:documentation>
                                The enumeration value in this field will control whether buyers' shipping addresses are always returned in Merchant Data's <b>SoldReport</b> response, or only when payment has been cleared.
                            </xs:documentation>
                            <xs:appinfo>
                                <Default>CheckoutComplete</Default>
                                <CallInfo>
                                    <CallName>startDownloadJob</CallName>
                                    <RequiredInput>No</RequiredInput>
                                </CallInfo>
                            </xs:appinfo>
                        </xs:annotation>
                    </xs:element>
                    <xs:any maxOccurs="unbounded" minOccurs="0" processContents="lax"/>
                </xs:sequence>
            </xs:complexType>
            <xs:simpleType name="IncludeShippingAddressType">
                <xs:annotation>
                    <xs:documentation>
                        Enumerated type defining the values that may be used in the <b>soldReportFilter.includeShippingAddress</b> field to control the output of buyers' shipping addresses in Merchant Data's <b>SoldReport</b> response.
                    </xs:documentation>
                </xs:annotation>
                <xs:restriction base="xs:token">
                    <xs:enumeration value="Always">
                        <xs:annotation>
                            <xs:documentation>
                                This value indicates that buyers' shipping address information should always be emitted in Merchant Data's <b>SoldReport</b> response.
                            </xs:documentation>
                        </xs:annotation>
                    </xs:enumeration>
                    <xs:enumeration value="CheckoutComplete">
                        <xs:annotation>
                            <xs:documentation>
                                This value indicates that buyers' shipping address information should be emitted in Merchant Data's <b>SoldReport</b> response only when payment has been cleared.
                            </xs:documentation>
                        </xs:annotation>
                    </xs:enumeration>
                </xs:restriction>
            </xs:simpleType>
            <xs:complexType name="OrderReportFilter">
                <xs:annotation>
                    <xs:documentation>
                        Type defining the <b>orderReportFilter</b> container, which allows the user to set time, order status, or order type (eBay or Half.com) filters, and to specify whether or not to include Final Value Fees for each order line item in Merchant Data's <b>OrderReport</b> response. <br/><br/> The <b>orderReportFilter</b> container is only applicable if the <b>downloadJobType</b> value is set to 'OrderReport'.
                    </xs:documentation>
                </xs:annotation>
                <xs:sequence>
                    <xs:element name="createTimeFrom" type="xs:dateTime" minOccurs="0">
                        <xs:annotation>
                            <xs:documentation>
                                The <b>createTimeFrom</b> and <b>createTimeTo</b> fields specify a date range for retrieving orders. The <b>createTimeFrom</b> value is the start of the date range. All eBay orders that were created within this date range are returned in the output. The maximum date range that may be specified is 30 days. <br><br> If the <b>createTimeFrom</b> field is set, the <b>createTimeTo</b> field must also be included or the call will fail. <br><br> If the order Creation Time or order Modification Time filters are not provided, the default behavior is to retrieve unacknowledged orders from the last 30 days. <br><br> Applicable to Half.com (if the <b>listingType</b> field is included and set to 'Half'.
                            </xs:documentation>
                            <xs:appinfo>
                                <CallInfo>
                                    <CallName>startDownloadJob</CallName>
                                    <RequiredInput>Conditionally</RequiredInput>
                                </CallInfo>
                            </xs:appinfo>
                        </xs:annotation>
                    </xs:element>
                    <xs:element name="createTimeTo" type="xs:dateTime" minOccurs="0">
                        <xs:annotation>
                            <xs:documentation>
                                The <b>createTimeFrom</b> and <b>createTimeTo</b> fields specify a date range for retrieving orders. The <b>createTimeTo</b> value is the end of the date range. All eBay orders that were created within this date range are returned in the output. The maximum date range that may be specified is 30 days. <br><br> If the <b>createTimeTo</b> field is set, the <b>createTimeFrom</b> field must also be included or the call will fail. <br><br> If the order Creation Time or order Modification Time filters are not provided, the default behavior is to retrieve unacknowledged orders from the last 30 days. <br><br> Applicable to Half.com (if the <b>listingType</b> field is included and set to 'Half').
                            </xs:documentation>
                            <xs:appinfo>
                                <CallInfo>
                                    <CallName>startDownloadJob</CallName>
                                    <RequiredInput>Conditionally</RequiredInput>
                                </CallInfo>
                            </xs:appinfo>
                        </xs:annotation>
                    </xs:element>
                    <xs:element name="modTimeFrom" type="xs:dateTime" minOccurs="0">
                        <xs:annotation>
                            <xs:documentation>
                                The <b>modTimeFrom</b> and <b>modTimeTo</b> fields specify a date range for retrieving orders. The <b>modTimeFrom</b> value is the start of the date range. All eBay orders that were modified within this date range are returned in the output. The maximum date range that may be specified is 30 days. <br><br> If the <b>modTimeFrom</b> field is set, the <b>modTimeTo</b> field must also be included or the call will fail. The <b>modTimeFrom</b> and <b>modTimeTo</b> filters are not applicable if the <b>createTimeFrom</b> and <b>createTimeTo</b> fields are set. <br><br> If the order Creation Time or order Modification Time filters are not provided, the default behavior is to retrieve unacknowledged orders from the last 30 days. <br><br> Applicable to Half.com (if the <b>listingType</b> field is included and set to 'Half').
                            </xs:documentation>
                            <xs:appinfo>
                                <CallInfo>
                                    <CallName>startDownloadJob</CallName>
                                    <RequiredInput>Conditionally</RequiredInput>
                                </CallInfo>
                            </xs:appinfo>
                        </xs:annotation>
                    </xs:element>
                    <xs:element name="modTimeTo" type="xs:dateTime" minOccurs="0">
                        <xs:annotation>
                            <xs:documentation>
                                The <b>modTimeFrom</b> and <b>modTimeTo</b> fields specify a date range for retrieving orders. The <b>modTimeTo</b> value is the end of the date range. All eBay orders that were modified within this date range are returned in the output. The maximum date range that may be specified is 30 days. <br><br> If the <b>modTimeFrom</b> field is set, the <b>modTimeTo</b> field must also be included or the call will fail. The <b>modTimeFrom</b> and <b>modTimeTo</b> filters are not applicable if the <b>createTimeFrom</b> and <b>createTimeTo</b> fields are set. <br><br> If the order Creation Time or order Modification Time filters are not provided, the default behavior is to retrieve unacknowledged orders from the last 30 days. <br><br> Applicable to Half.com (if the <b>listingType</b> field is included and set to 'Half').
                            </xs:documentation>
                            <xs:appinfo>
                                <CallInfo>
                                    <CallName>startDownloadJob</CallName>
                                    <RequiredInput>Conditionally</RequiredInput>
                                </CallInfo>
                            </xs:appinfo>
                        </xs:annotation>
                    </xs:element>
                    <xs:element name="includeFinalValueFee" type="xs:boolean" minOccurs="0">
                        <xs:annotation>
                            <xs:documentation>
                                This field should be included and set to 'true' if the user wishes to include the Final Value Fee for all order line items in the response. The Final Value Fee is returned in the <b>Transaction.FinalValueFee</b> field. The Final Value Fee is assessed right after the creation of an eBay order line item.
                            </xs:documentation>
                            <xs:appinfo>
                                <CallInfo>
                                    <CallName>startDownloadJob</CallName>
                                    <RequiredInput>No</RequiredInput>
                                </CallInfo>
                            </xs:appinfo>
                        </xs:annotation>
                    </xs:element>
                    <xs:element name="listingType" minOccurs="0" type="tns:ListingType">
                        <xs:annotation>
                            <xs:documentation>
                                This field must be included and set to 'Half' if the user only wants to retrieve Half.com orders. This field should not be used if the user wishes to retrieve eBay.com orders.
                            </xs:documentation>
                            <xs:appinfo>
                                <CallInfo>
                                    <CallName>startDownloadJob</CallName>
                                    <RequiredInput>Conditionally</RequiredInput>
                                </CallInfo>
                            </xs:appinfo>
                        </xs:annotation>
                    </xs:element>
                    <xs:element name="orderStatus" minOccurs="0" type="tns:OrderStatusTypes">
                        <xs:annotation>
                            <xs:documentation>
                                The field is used to retrieve orders that are in a specific state. If this field is used with a date filter, only orders that satisfy both the date range and the <strong>orderStatus</strong> value are retrieved. <br><br> For eBay.com orders, this field's value can be set to 'Active', 'Completed', 'Cancelled' or 'Inactive' to retrieve orders in these states. The 'Shipped' value is only applicable for Half.com orders.
                            </xs:documentation>
                            <xs:appinfo>
                                <default>All</default>
                                <CallInfo>
                                    <CallName>startDownloadJob</CallName>
                                    <RequiredInput>No</RequiredInput>
                                </CallInfo>
                            </xs:appinfo>
                        </xs:annotation>
                    </xs:element>
                    <xs:element name="version" minOccurs="1" type="xs:int">
                        <xs:annotation>
                            <xs:documentation>
                                The value input into this field indicates the version number of the Trading API (specifically, GetOrders) that will be called when the <strong>orderReport</strong> is generated. This value must be a valid Trading API version number and it must be Version 841 or later. If an older version is used, <strong>orderReport</strong> will fail. <br><br> This field is required if the <strong>orderReportFilter</strong> container is used.
                            </xs:documentation>
                            <xs:appinfo>
                                <CallInfo>
                                    <CallName>startDownloadJob</CallName>
                                    <RequiredInput>Conditionally</RequiredInput>
                                </CallInfo>
                            </xs:appinfo>
                        </xs:annotation>
                    </xs:element>
                </xs:sequence>
            </xs:complexType>
            <xs:simpleType name="ListingType">
                <xs:annotation>
                    <xs:documentation>
                        Enumerated type used by the <b>listingType</b> field if the seller wants to retrieve Half.com orders. The <b>listingType</b> field is only used if the seller wants to retrieve Half.com orders.
                    </xs:documentation>
                </xs:annotation>
                <xs:restriction base="xs:token">
                    <xs:enumeration value="Half">
                        <xs:annotation>
                            <xs:documentation>
                                This value is used if the seller wants to retrieve Half.com orders.
                            </xs:documentation>
                        </xs:annotation>
                    </xs:enumeration>
                </xs:restriction>
            </xs:simpleType>
            <xs:simpleType name="OrderStatusTypes">
                <xs:annotation>
                    <xs:documentation>
                        Enumerated type defining the order status values that can be used in the <b>orderStatus</b> field, which is used if the seller wants to retrieve eBay.com or Half.com orders in a specific state.
                    </xs:documentation>
                </xs:annotation>
                <xs:restriction base="xs:token">
                    <xs:enumeration value="Active">
                        <xs:annotation>
                            <xs:documentation>
                                If this value is used, only active orders are retrieved. Orders in the 'Active' state means that the buyer's payment on the order has not yet cleared. This value is supported for eBay.com and Half.com orders.
                            </xs:documentation>
                        </xs:annotation>
                    </xs:enumeration>
                    <xs:enumeration value="All">
                        <xs:annotation>
                            <xs:documentation>
                                If this value is used, orders in all states are retrieved. This is the default <b>orderStatus</b> value, and is supported for eBay.com and Half.com orders.
                            </xs:documentation>
                        </xs:annotation>
                    </xs:enumeration>
                    <xs:enumeration value="Completed">
                        <xs:annotation>
                            <xs:documentation>
                                If this value is used, only completed orders are retrieved. Orders in the 'Completed' state indicates that the buyer's payment on the order has cleared and checkout is complete. This value is supported for eBay.com and Half.com orders.
                            </xs:documentation>
                        </xs:annotation>
                    </xs:enumeration>
                    <xs:enumeration value="Cancelled">
                        <xs:annotation>
                            <xs:documentation>
                                If this value is used, only cancelled Half.com orders are retrieved. This value is only supported for Half.com orders.
                            </xs:documentation>
                        </xs:annotation>
                    </xs:enumeration>
                    <xs:enumeration value="Shipped">
                        <xs:annotation>
                            <xs:documentation>
                                If this value is used, only Half.com orders that have been shipped by the seller are retrieved. This value is only supported for Half.com orders.
                            </xs:documentation>
                        </xs:annotation>
                    </xs:enumeration>
                </xs:restriction>
            </xs:simpleType>
        </xs:schema>
    </wsdl:types>
    <wsdl:message name="getRecurringJobsResponse">
        <wsdl:part element="ns0:getRecurringJobsResponse" name="params"></wsdl:part>
    </wsdl:message>
    <wsdl:message name="startDownloadJobRequest">
        <wsdl:part element="ns0:startDownloadJobRequest" name="params"></wsdl:part>
    </wsdl:message>
    <wsdl:message name="getRecurringJobExecutionStatusRequest">
        <wsdl:part element="ns0:getRecurringJobExecutionStatusRequest" name="params"></wsdl:part>
    </wsdl:message>
    <wsdl:message name="getJobStatusResponse">
        <wsdl:part element="ns0:getJobStatusResponse" name="params"></wsdl:part>
    </wsdl:message>
    <wsdl:message name="getJobStatusRequest">
        <wsdl:part element="ns0:getJobStatusRequest" name="params"></wsdl:part>
    </wsdl:message>
    <wsdl:message name="startUploadJobRequest">
        <wsdl:part element="ns0:startUploadJobRequest" name="params"></wsdl:part>
    </wsdl:message>
    <wsdl:message name="startDownloadJobResponse">
        <wsdl:part element="ns0:startDownloadJobResponse" name="params"></wsdl:part>
    </wsdl:message>
    <wsdl:message name="suspendRecurringJobRequest">
        <wsdl:part element="ns0:suspendRecurringJobRequest" name="params"></wsdl:part>
    </wsdl:message>
    <wsdl:message name="getRecurringJobExecutionHistoryResponse">
        <wsdl:part element="ns0:getRecurringJobExecutionHistoryResponse" name="params"></wsdl:part>
    </wsdl:message>
    <wsdl:message name="createRecurringJobRequest">
        <wsdl:part element="ns0:createRecurringJobRequest" name="params"></wsdl:part>
    </wsdl:message>
    <wsdl:message name="getRecurringJobsRequest">
        <wsdl:part element="ns0:getRecurringJobsRequest" name="params"></wsdl:part>
    </wsdl:message>
    <wsdl:message name="getJobsResponse">
        <wsdl:part element="ns0:getJobsResponse" name="params"></wsdl:part>
    </wsdl:message>
    <wsdl:message name="abortRecurringJobExecutionResponse">
        <wsdl:part element="ns0:abortRecurringJobExecutionResponse" name="params"></wsdl:part>
    </wsdl:message>
    <wsdl:message name="abortRecurringJobExecutionRequest">
        <wsdl:part element="ns0:abortRecurringJobExecutionRequest" name="params"></wsdl:part>
    </wsdl:message>
    <wsdl:message name="deleteRecurringJobRequest">
        <wsdl:part element="ns0:deleteRecurringJobRequest" name="params"></wsdl:part>
    </wsdl:message>
    <wsdl:message name="getJobsRequest">
        <wsdl:part element="ns0:getJobsRequest" name="params"></wsdl:part>
    </wsdl:message>
    <wsdl:message name="abortJobRequest">
        <wsdl:part element="ns0:abortJobRequest" name="params"></wsdl:part>
    </wsdl:message>
    <wsdl:message name="suspendRecurringJobResponse">
        <wsdl:part element="ns0:suspendRecurringJobResponse" name="params"></wsdl:part>
    </wsdl:message>
    <wsdl:message name="createRecurringJobResponse">
        <wsdl:part element="ns0:createRecurringJobResponse" name="params"></wsdl:part>
    </wsdl:message>
    <wsdl:message name="getRecurringJobExecutionHistoryRequest">
        <wsdl:part element="ns0:getRecurringJobExecutionHistoryRequest" name="params"></wsdl:part>
    </wsdl:message>
    <wsdl:message name="activateRecurringJobRequest">
        <wsdl:part element="ns0:activateRecurringJobRequest" name="params"></wsdl:part>
    </wsdl:message>
    <wsdl:message name="startUploadJobResponse">
        <wsdl:part element="ns0:startUploadJobResponse" name="params"></wsdl:part>
    </wsdl:message>
    <wsdl:message name="getRecurringJobExecutionStatusResponse">
        <wsdl:part element="ns0:getRecurringJobExecutionStatusResponse" name="params"></wsdl:part>
    </wsdl:message>
    <wsdl:message name="activateRecurringJobResponse">
        <wsdl:part element="ns0:activateRecurringJobResponse" name="params"></wsdl:part>
    </wsdl:message>
    <wsdl:message name="createUploadJobRequest">
        <wsdl:part element="ns0:createUploadJobRequest" name="params"></wsdl:part>
    </wsdl:message>
    <wsdl:message name="abortJobResponse">
        <wsdl:part element="ns0:abortJobResponse" name="params"></wsdl:part>
    </wsdl:message>
    <wsdl:message name="deleteRecurringJobResponse">
        <wsdl:part element="ns0:deleteRecurringJobResponse" name="params"></wsdl:part>
    </wsdl:message>
    <wsdl:message name="createUploadJobResponse">
        <wsdl:part element="ns0:createUploadJobResponse" name="params"></wsdl:part>
    </wsdl:message>
    <wsdl:portType name="BulkDataExchangeServicePort">
        <wsdl:operation name="createUploadJob">
            <wsdl:input message="ns0:createUploadJobRequest"></wsdl:input>
            <wsdl:output message="ns0:createUploadJobResponse"></wsdl:output>
        </wsdl:operation>
        <wsdl:operation name="startUploadJob">
            <wsdl:input message="ns0:startUploadJobRequest"></wsdl:input>
            <wsdl:output message="ns0:startUploadJobResponse"></wsdl:output>
        </wsdl:operation>
        <wsdl:operation name="abortJob">
            <wsdl:input message="ns0:abortJobRequest"></wsdl:input>
            <wsdl:output message="ns0:abortJobResponse"></wsdl:output>
        </wsdl:operation>
        <wsdl:operation name="getJobs">
            <wsdl:input message="ns0:getJobsRequest"></wsdl:input>
            <wsdl:output message="ns0:getJobsResponse"></wsdl:output>
        </wsdl:operation>
        <wsdl:operation name="getJobStatus">
            <wsdl:input message="ns0:getJobStatusRequest"></wsdl:input>
            <wsdl:output message="ns0:getJobStatusResponse"></wsdl:output>
        </wsdl:operation>
        <wsdl:operation name="startDownloadJob">
            <wsdl:input message="ns0:startDownloadJobRequest"></wsdl:input>
            <wsdl:output message="ns0:startDownloadJobResponse"></wsdl:output>
        </wsdl:operation>
        <wsdl:operation name="createRecurringJob">
            <wsdl:input message="ns0:createRecurringJobRequest"></wsdl:input>
            <wsdl:output message="ns0:createRecurringJobResponse"></wsdl:output>
        </wsdl:operation>
        <wsdl:operation name="deleteRecurringJob">
            <wsdl:input message="ns0:deleteRecurringJobRequest"></wsdl:input>
            <wsdl:output message="ns0:deleteRecurringJobResponse"></wsdl:output>
        </wsdl:operation>
        <wsdl:operation name="getRecurringJobs">
            <wsdl:input message="ns0:getRecurringJobsRequest"></wsdl:input>
            <wsdl:output message="ns0:getRecurringJobsResponse"></wsdl:output>
        </wsdl:operation>
        <wsdl:operation name="getRecurringJobExecutionStatus">
            <wsdl:input message="ns0:getRecurringJobExecutionStatusRequest"></wsdl:input>
            <wsdl:output message="ns0:getRecurringJobExecutionStatusResponse"></wsdl:output>
        </wsdl:operation>
        <wsdl:operation name="getRecurringJobExecutionHistory">
            <wsdl:input message="ns0:getRecurringJobExecutionHistoryRequest"></wsdl:input>
            <wsdl:output message="ns0:getRecurringJobExecutionHistoryResponse"></wsdl:output>
        </wsdl:operation>
        <wsdl:operation name="activateRecurringJob">
            <wsdl:input message="ns0:activateRecurringJobRequest"></wsdl:input>
            <wsdl:output message="ns0:activateRecurringJobResponse"></wsdl:output>
        </wsdl:operation>
        <wsdl:operation name="suspendRecurringJob">
            <wsdl:input message="ns0:suspendRecurringJobRequest"></wsdl:input>
            <wsdl:output message="ns0:suspendRecurringJobResponse"></wsdl:output>
        </wsdl:operation>
        <wsdl:operation name="abortRecurringJobExecution">
            <wsdl:input message="ns0:abortRecurringJobExecutionRequest"></wsdl:input>
            <wsdl:output message="ns0:abortRecurringJobExecutionResponse"></wsdl:output>
        </wsdl:operation>
    </wsdl:portType>
    <wsdl:binding name="BulkDataExchangeServiceHttpBinding" type="ns0:BulkDataExchangeServicePort">
        <http:binding verb="POST"/>
        <wsdl:operation name="createUploadJob">
            <http:operation location="BulkDataExchangeService/createUploadJob"/>
            <wsdl:input>
                <mime:content part="createUploadJob" type="text/xml"/>
            </wsdl:input>
            <wsdl:output>
                <mime:content part="createUploadJob" type="text/xml"/>
            </wsdl:output>
        </wsdl:operation>
        <wsdl:operation name="startUploadJob">
            <http:operation location="BulkDataExchangeService/startUploadJob"/>
            <wsdl:input>
                <mime:content part="startUploadJob" type="text/xml"/>
            </wsdl:input>
            <wsdl:output>
                <mime:content part="startUploadJob" type="text/xml"/>
            </wsdl:output>
        </wsdl:operation>
        <wsdl:operation name="abortJob">
            <http:operation location="BulkDataExchangeService/abortJob"/>
            <wsdl:input>
                <mime:content part="abortJob" type="text/xml"/>
            </wsdl:input>
            <wsdl:output>
                <mime:content part="abortJob" type="text/xml"/>
            </wsdl:output>
        </wsdl:operation>
        <wsdl:operation name="getJobs">
            <http:operation location="BulkDataExchangeService/getJobs"/>
            <wsdl:input>
                <mime:content part="getJobs" type="text/xml"/>
            </wsdl:input>
            <wsdl:output>
                <mime:content part="getJobs" type="text/xml"/>
            </wsdl:output>
        </wsdl:operation>
        <wsdl:operation name="getJobStatus">
            <http:operation location="BulkDataExchangeService/getJobStatus"/>
            <wsdl:input>
                <mime:content part="getJobStatus" type="text/xml"/>
            </wsdl:input>
            <wsdl:output>
                <mime:content part="getJobStatus" type="text/xml"/>
            </wsdl:output>
        </wsdl:operation>
        <wsdl:operation name="startDownloadJob">
            <http:operation location="BulkDataExchangeService/startDownloadJob"/>
            <wsdl:input>
                <mime:content part="startDownloadJob" type="text/xml"/>
            </wsdl:input>
            <wsdl:output>
                <mime:content part="startDownloadJob" type="text/xml"/>
            </wsdl:output>
        </wsdl:operation>
        <wsdl:operation name="createRecurringJob">
            <http:operation location="BulkDataExchangeService/createRecurringJob"/>
            <wsdl:input>
                <mime:content part="createRecurringJob" type="text/xml"/>
            </wsdl:input>
            <wsdl:output>
                <mime:content part="createRecurringJob" type="text/xml"/>
            </wsdl:output>
        </wsdl:operation>
        <wsdl:operation name="deleteRecurringJob">
            <http:operation location="BulkDataExchangeService/deleteRecurringJob"/>
            <wsdl:input>
                <mime:content part="deleteRecurringJob" type="text/xml"/>
            </wsdl:input>
            <wsdl:output>
                <mime:content part="deleteRecurringJob" type="text/xml"/>
            </wsdl:output>
        </wsdl:operation>
        <wsdl:operation name="getRecurringJobs">
            <http:operation location="BulkDataExchangeService/getRecurringJobs"/>
            <wsdl:input>
                <mime:content part="getRecurringJobs" type="text/xml"/>
            </wsdl:input>
            <wsdl:output>
                <mime:content part="getRecurringJobs" type="text/xml"/>
            </wsdl:output>
        </wsdl:operation>
        <wsdl:operation name="getRecurringJobExecutionStatus">
            <http:operation location="BulkDataExchangeService/getRecurringJobExecutionStatus"/>
            <wsdl:input>
                <mime:content part="getRecurringJobExecutionStatus" type="text/xml"/>
            </wsdl:input>
            <wsdl:output>
                <mime:content part="getRecurringJobExecutionStatus" type="text/xml"/>
            </wsdl:output>
        </wsdl:operation>
        <wsdl:operation name="getRecurringJobExecutionHistory">
            <http:operation location="BulkDataExchangeService/getRecurringJobExecutionHistory"/>
            <wsdl:input>
                <mime:content part="getRecurringJobExecutionHistory" type="text/xml"/>
            </wsdl:input>
            <wsdl:output>
                <mime:content part="getRecurringJobExecutionHistory" type="text/xml"/>
            </wsdl:output>
        </wsdl:operation>
        <wsdl:operation name="activateRecurringJob">
            <http:operation location="BulkDataExchangeService/activateRecurringJob"/>
            <wsdl:input>
                <mime:content part="activateRecurringJob" type="text/xml"/>
            </wsdl:input>
            <wsdl:output>
                <mime:content part="activateRecurringJob" type="text/xml"/>
            </wsdl:output>
        </wsdl:operation>
        <wsdl:operation name="suspendRecurringJob">
            <http:operation location="BulkDataExchangeService/suspendRecurringJob"/>
            <wsdl:input>
                <mime:content part="suspendRecurringJob" type="text/xml"/>
            </wsdl:input>
            <wsdl:output>
                <mime:content part="suspendRecurringJob" type="text/xml"/>
            </wsdl:output>
        </wsdl:operation>
        <wsdl:operation name="abortRecurringJobExecution">
            <http:operation location="BulkDataExchangeService/abortRecurringJobExecution"/>
            <wsdl:input>
                <mime:content part="abortRecurringJobExecution" type="text/xml"/>
            </wsdl:input>
            <wsdl:output>
                <mime:content part="abortRecurringJobExecution" type="text/xml"/>
            </wsdl:output>
        </wsdl:operation>
    </wsdl:binding>
    <wsdl:binding name="BulkDataExchangeServiceSOAPBinding" type="ns0:BulkDataExchangeServicePort">
        <soap12:binding style="document" transport="http://schemas.xmlsoap.org/soap/http"/>
        <wsdl:operation name="createUploadJob">
            <soap12:operation soapAction="urn:createUploadJob" style="document"/>
            <wsdl:input>
                <soap12:body use="literal"/>
            </wsdl:input>
            <wsdl:output>
                <soap12:body use="literal"/>
            </wsdl:output>
        </wsdl:operation>
        <wsdl:operation name="startUploadJob">
            <soap12:operation soapAction="urn:startUploadJob" style="document"/>
            <wsdl:input>
                <soap12:body use="literal"/>
            </wsdl:input>
            <wsdl:output>
                <soap12:body use="literal"/>
            </wsdl:output>
        </wsdl:operation>
        <wsdl:operation name="abortJob">
            <soap12:operation soapAction="urn:abortJob" style="document"/>
            <wsdl:input>
                <soap12:body use="literal"/>
            </wsdl:input>
            <wsdl:output>
                <soap12:body use="literal"/>
            </wsdl:output>
        </wsdl:operation>
        <wsdl:operation name="getJobs">
            <soap12:operation soapAction="urn:getJobs" style="document"/>
            <wsdl:input>
                <soap12:body use="literal"/>
            </wsdl:input>
            <wsdl:output>
                <soap12:body use="literal"/>
            </wsdl:output>
        </wsdl:operation>
        <wsdl:operation name="getJobStatus">
            <soap12:operation soapAction="urn:getJobStatus" style="document"/>
            <wsdl:input>
                <soap12:body use="literal"/>
            </wsdl:input>
            <wsdl:output>
                <soap12:body use="literal"/>
            </wsdl:output>
        </wsdl:operation>
        <wsdl:operation name="startDownloadJob">
            <soap12:operation soapAction="urn:startDownloadJob" style="document"/>
            <wsdl:input>
                <soap12:body use="literal"/>
            </wsdl:input>
            <wsdl:output>
                <soap12:body use="literal"/>
            </wsdl:output>
        </wsdl:operation>
        <wsdl:operation name="createRecurringJob">
            <soap12:operation soapAction="urn:createRecurringJob" style="document"/>
            <wsdl:input>
                <soap12:body use="literal"/>
            </wsdl:input>
            <wsdl:output>
                <soap12:body use="literal"/>
            </wsdl:output>
        </wsdl:operation>
        <wsdl:operation name="deleteRecurringJob">
            <soap12:operation soapAction="urn:deleteRecurringJob" style="document"/>
            <wsdl:input>
                <soap12:body use="literal"/>
            </wsdl:input>
            <wsdl:output>
                <soap12:body use="literal"/>
            </wsdl:output>
        </wsdl:operation>
        <wsdl:operation name="getRecurringJobs">
            <soap12:operation soapAction="urn:getRecurringJobs" style="document"/>
            <wsdl:input>
                <soap12:body use="literal"/>
            </wsdl:input>
            <wsdl:output>
                <soap12:body use="literal"/>
            </wsdl:output>
        </wsdl:operation>
        <wsdl:operation name="getRecurringJobExecutionStatus">
            <soap12:operation soapAction="urn:getRecurringJobExecutionStatus" style="document"/>
            <wsdl:input>
                <soap12:body use="literal"/>
            </wsdl:input>
            <wsdl:output>
                <soap12:body use="literal"/>
            </wsdl:output>
        </wsdl:operation>
        <wsdl:operation name="getRecurringJobExecutionHistory">
            <soap12:operation soapAction="urn:getRecurringJobExecutionHistory" style="document"/>
            <wsdl:input>
                <soap12:body use="literal"/>
            </wsdl:input>
            <wsdl:output>
                <soap12:body use="literal"/>
            </wsdl:output>
        </wsdl:operation>
        <wsdl:operation name="activateRecurringJob">
            <soap12:operation soapAction="urn:activateRecurringJob" style="document"/>
            <wsdl:input>
                <soap12:body use="literal"/>
            </wsdl:input>
            <wsdl:output>
                <soap12:body use="literal"/>
            </wsdl:output>
        </wsdl:operation>
        <wsdl:operation name="suspendRecurringJob">
            <soap12:operation soapAction="urn:suspendRecurringJob" style="document"/>
            <wsdl:input>
                <soap12:body use="literal"/>
            </wsdl:input>
            <wsdl:output>
                <soap12:body use="literal"/>
            </wsdl:output>
        </wsdl:operation>
        <wsdl:operation name="abortRecurringJobExecution">
            <soap12:operation soapAction="urn:abortRecurringJobExecution" style="document"/>
            <wsdl:input>
                <soap12:body use="literal"/>
            </wsdl:input>
            <wsdl:output>
                <soap12:body use="literal"/>
            </wsdl:output>
        </wsdl:operation>
    </wsdl:binding>
    <wsdl:service name="BulkDataExchangeService">
        <wsdl:documentation>
            <version>1.5.0</version>
        </wsdl:documentation>
        <wsdl:port binding="ns0:BulkDataExchangeServiceHttpBinding" name="BulkDataExchangeServiceHttp">
            <http:address location="https://webservices.ebay.com/BulkDataExchangeService"/>
        </wsdl:port>
        <wsdl:port binding="ns0:BulkDataExchangeServiceSOAPBinding" name="BulkDataExchangeServiceSOAP">
            <soap12:address location="https://webservices.ebay.com/BulkDataExchangeService"/>
        </wsdl:port>
    </wsdl:service>
</wsdl:definitions>