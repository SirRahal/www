<?php

namespace Ebay\Common;

/**
 * Generated by PHPUnit_SkeletonGenerator 1.2.1 on 2014-05-27 at 16:04:25.
 */
class FieldTest extends \PHPUnit_Framework_TestCase {

    /**
     * @var Field
     */
    protected $object;

    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     */
    protected function setUp() {
        $this->object = new Field;
    }

    /**
     * Tears down the fixture, for example, closes a network connection.
     * This method is called after a test is executed.
     */
    protected function tearDown() {
        
    }

    /**
     * @covers Ebay\Common\Field::setName
     * @todo   Implement testSetName().
     */
    public function testSetName() {       
        
        $reflection = new \ReflectionClass($this->object);
 
        $reflection_property = $reflection->getProperty('name');
        $reflection_property->setAccessible(true);
        
        $this->object->setName('Test');
        
        $this->assertEquals('Test',$reflection_property->getValue($this->object));       
        
    }

    /**
     * @covers Ebay\Common\Field::setAttribute
     * @todo   Implement testSetAttribute().
     */
    public function testSetAttribute() {
        
        $reflection = new \ReflectionClass($this->object);
 
        $reflection_property = $reflection->getProperty('attributes');
        $reflection_property->setAccessible(true);       
        
        $this->object->setAttribute('Test', 'Value');
        
        $values = $reflection_property->getValue($this->object);
        $attributes = array_pop($values);
        
        $this->assertEquals('Test',$attributes['name']);
        $this->assertEquals('Value',$attributes['value']);
        
    }

    /**
     * @covers Ebay\Common\Field::setValue
     * @todo   Implement testSetValue().
     */
    public function testSetValue() {
       
        $reflection = new \ReflectionClass($this->object);
 
        $reflection_property = $reflection->getProperty('values');
        $reflection_property->setAccessible(true);       
        
        $this->object->setValue('Test');
        
        $values = $reflection_property->getValue($this->object);
        $value = array_pop($values);
        
        $this->assertEquals('Test',$value);
    }

    /**
     * @covers Ebay\Common\Field::getName
     * @todo   Implement testGetName().
     */
    public function testGetName() {
        
        $reflection = new \ReflectionClass($this->object);
 
        $reflection_property = $reflection->getProperty('name');
        $reflection_property->setAccessible(true);
        $reflection_property->setValue($this->object,"Name");
 
        $this->assertEquals("Name",$this->object->getName());
    }

    /**
     * @covers Ebay\Common\Field::getAttributes
     * @todo   Implement testGetAttributes().
     */
    public function testGetAttributes() {
        
        $reflection = new \ReflectionClass($this->object);
 
        $reflection_property = $reflection->getProperty('attributes');
        $reflection_property->setAccessible(true);
        $reflection_property->setValue($this->object,array('name' => 'Name','value' => 'Value'));
        
        $attribute = $this->object->getAttributes();        
 
        $this->assertEquals("Name",$attribute['name']);
        $this->assertEquals("Value",$attribute['value']);
    }

    /**
     * @covers Ebay\Common\Field::getValues
     * @todo   Implement testGetValues().
     */
    public function testGetValues() {
        
        $reflection = new \ReflectionClass($this->object);
 
        $reflection_property = $reflection->getProperty('values');
        $reflection_property->setAccessible(true);
        $reflection_property->setValue($this->object,array('Name'));
        
        $values = $this->object->getValues();
        $value = array_pop($values);
 
        $this->assertEquals("Name",$value);
    }
}